{"version":3,"file":"videotime.min.js","sources":["../src/videotime.js"],"sourcesContent":["/*\n * @package    mod_videotime\n * @copyright  2021 bdecent gmbh <https://bdecent.de>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/*\n * Load chapters into tab\n *\n * @package    videotimetab_chapter\n * @module     videotimetab_chapter/loadchapters\n * @copyright  2022 bdecent gmbh <https://bdecent.de>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from \"jquery\";\nimport VideoTimeBase from \"mod_videotime/videotime\";\nimport Log from \"core/log\";\nimport Notification from \"core/notification\";\nimport Player from \"media_videojs/video-lazy\";\nimport Templates from \"core/templates\";\n\nexport default class VideoTime extends VideoTimeBase {\n\n    initialize() {\n        Log.debug('Initializing Video Time ' + this.elementId);\n\n        this.getInstance().then((instance) => {\n            let options = {\n                autoplay: instance.autoplay,\n                controls: instance.controls,\n                responsive: instance.responsive,\n                muted: instance.muted\n            };\n            if (!instance.responsive && instance.height && instance.width) {\n                options.height = instance.height;\n                options.width = instance.width;\n            }\n            Log.debug('Initializing VideoJS player with options:');\n            this.player = new Player(this.elementId, options);\n\n            let url = new URL(window.location.href),\n                q = url.searchParams.get('q'),\n                starttime = (url.searchParams.get('time') || '').match(/^([0-9]+:){0,2}([0-9]+)(\\.[0-9]+)$/);\n            if (starttime) {\n                this.setStartTime(starttime[0]).then(function() {\n                    if (q && window.find) {\n                        window.find(q);\n                    }\n                    return true;\n                }).catch(Notification.exception);\n            } else if (q && window.find) {\n                window.find(q);\n            }\n\n            this.addListeners();\n\n            for (let i = 0; i < this.plugins.length; i++) {\n                const plugin = this.plugins[i];\n                plugin.initialize(this, instance);\n            }\n\n            return true;\n        }).catch(Notification.exeption);\n    }\n\n    /**\n     * Register player events to respond to user interaction and play progress.\n     */\n    addListeners() {\n        if (!this.player) {\n            Log.debug('Player was not properly initialized for course module ' + this.cmId);\n            return;\n        }\n\n        // Fire view event in Moodle on first play only.\n        this.player.on('play', () => {\n            if (!this.played) {\n                if (this.hasPro) {\n                    // Getting a new session on first play.\n                    this.getSession().then(() => {\n                        this.view();\n                        this.startWatchInterval();\n                        return true;\n                    }).catch(Notification.exception);\n                } else {\n                    // Free version can still mark completion on video time view.\n                    this.view();\n                }\n            }\n            return true;\n        });\n\n        // Features beyond this point are for pro only.\n        if (!this.hasPro) {\n            return;\n        }\n\n        // If resume is present force seek the player to that point.\n        this.getResumeTime().then((seconds) => {\n            if (seconds <= 0) {\n                return true;\n            }\n\n            this.player.on('loaded', () => {\n                let duration = this.getPlayer().duration(),\n                    resumeTime = seconds;\n                // Duration is often a little greater than a resume time at the end of the video.\n                // A user may have watched 100 seconds when the video ends, but the duration may be\n                // 100.56 seconds. BUT, sometimes the duration is rounded depending on when the\n                // video loads, so it may be 101 seconds. Hence the +1 and Math.floor usage.\n                if (seconds + 1 >= Math.floor(duration)) {\n                    Log.debug('VIDEO_TIME video finished, resuming at start of video.');\n                    resumeTime = 0;\n                }\n                Log.debug('VIDEO_TIME resuming at ' + resumeTime);\n                this.player.setCurrentTime(resumeTime);\n            });\n            return true;\n        }).catch(Notification.exception);\n\n        // Note: Vimeo player does not support multiple events in a single on() call. Each requires it's own function.\n\n        // Catch all events where video plays.\n        this.player.on('play', function() {\n            this.playing = true;\n            Log.debug('VIDEO_TIME play');\n        }.bind(this));\n        this.player.on('playing', function() {\n            this.playing = true;\n            Log.debug('VIDEO_TIME playing');\n        }.bind(this));\n\n        // Catch all events where video stops.\n        this.player.on('pause', function() {\n            this.playing = false;\n            Log.debug('VIDEO_TIME pause');\n        }.bind(this));\n        this.player.on('stalled', function() {\n            this.playing = false;\n            Log.debug('VIDEO_TIME stalled');\n        }.bind(this));\n        this.player.on('suspend', function() {\n            this.playing = false;\n            Log.debug('VIDEO_TIME suspend');\n        }.bind(this));\n        this.player.on('abort', function() {\n            this.playing = false;\n            Log.debug('VIDEO_TIME abort');\n        }.bind(this));\n\n        this.player.on('playbackratechange', function() {\n            this.playbackRate = this.player.playbackRate();\n        }.bind(this));\n\n        // Always update internal values for percent and current time watched.\n        this.player.on('timeupdate', function() {\n            this.currentTime = this.player.currentTime();\n            this.percent = 100 * this.currentTime / this.player.duration();\n            Log.debug('VIDEO_TIME timeupdate. Percent: ' + this.percent + '. Current time: ' + this.currentTime);\n        }.bind(this));\n\n        // Initiate video finish procedure.\n        this.player.on('ended', function() {\n            this.playing = false;\n            Log.debug('VIDEO_TIME ended');\n\n            new Promise(function(resolve) {\n                this.getSession().then(function(session) {\n                    resolve(session);\n                    return true;\n                }).catch(Notification.exception);\n            }.bind(this)).then(function(session) {\n                this.setSessionState(session.id, 1);\n                return session;\n            }.bind(this)).then(function(session) {\n                this.setPercent(session.id, 1);\n                return session;\n            }.bind(this)).then(function(session) {\n                this.setCurrentTime(session.id, this.currentTime);\n                return session;\n            }.bind(this)).catch(Notification.exception).finally(function() {\n                this.getSession().then(function(session) {\n                    this.getNextActivityButtonData(session.id).then(function(response) {\n                        let data = JSON.parse(response.data);\n\n                        if (data.instance && parseInt(data.instance.next_activity_auto)) {\n                            if (!data.is_restricted && data.hasnextcm) {\n                                let link = $('.aalink[href=\"' + data.nextcm_url + '\"] img').first();\n                                if ($('.path-course-view').length && link) {\n                                    link.click();\n                                } else {\n                                    window.location.href = data.nextcm_url;\n                                }\n                            }\n                        }\n\n                        Templates.render('videotime/next_activity_button', JSON.parse(response.data))\n                            .then(function(html) {\n                                $('#next-activity-button').html(html);\n                                return true;\n                            }).fail(Notification.exception);\n                        return true;\n                    }).fail(Notification.exception);\n                }.bind(this)).catch(Notification.exception);\n            }.bind(this)).fail(Notification.exception);\n        }.bind(this));\n\n        // If this is a tab play set time cues and listener.\n        $($('#' + this.elementId).closest('.videotimetabs')).each(function(i, tabs) {\n           $(tabs).find('[data-action=\"cue\"]').each(function(index, anchor) {\n                let starttime = anchor.getAttribute('data-start'),\n                    time = starttime.match(/((([0-9]+):)?(([0-9]+):))?([0-9]+(\\.[0-9]+))/);\n                if (time) {\n                    this.player.addCuePoint(\n                        3600 * Number(time[3] || 0) + 60 * Number(time[5] || 0) + Number(time[6]),\n                        {\n                            starttime: starttime\n                        }\n                    ).catch(Notification.exeception);\n                }\n            }.bind(this));\n\n            this.player.on('cuepoint', function(event) {\n                if (event.data.starttime) {\n                    $(tabs).find('.videotime-highlight').removeClass('videotime-highlight');\n                    $(tabs).find('[data-action=\"cue\"][data-start=\"' + event.data.starttime + '\"]')\n                        .closest('.row')\n                        .addClass('videotime-highlight');\n                    $('.videotime-highlight').each(function() {\n                        if (this.offsetTop) {\n                            this.parentNode.scrollTo({\n                                top: this.offsetTop - 50,\n                                left: 0,\n                                behavior: 'smooth'\n                            });\n                        }\n                    });\n                }\n            });\n        }.bind(this));\n\n        // Readjust height when responsive player is resized.\n        if (this.player.options().responsive) {\n            let observer = new ResizeObserver(() => {\n                this.player.height(this.player.videoHeight() / this.player.videoWidth() * this.player.currentWidth());\n            });\n            observer.observe(document.querySelector('#' + this.elementId));\n        }\n    }\n\n    /**\n     * Parse start time and set player\n     *\n     * @param {string} starttime\n     * @returns {Promise}\n     */\n    setStartTime(starttime) {\n        let time = starttime.match(/((([0-9]+):)?(([0-9]+):))?([0-9]+(\\.[0-9]+))/);\n        if (time) {\n            this.resumeTime = 3600 * Number(time[3] || 0) + 60 * Number(time[5] || 0) + Number(time[6]);\n            return this.player.currentTime(this.resumeTime);\n        }\n        Log.debug('Set start time:' + starttime);\n        return this.player.currentTime();\n    }\n}\n"],"names":["VideoTime","VideoTimeBase","initialize","debug","this","elementId","getInstance","then","instance","options","autoplay","controls","responsive","muted","height","width","player","Player","url","URL","window","location","href","q","searchParams","get","starttime","match","setStartTime","find","catch","Notification","exception","addListeners","i","plugins","length","exeption","on","played","hasPro","getSession","view","startWatchInterval","getResumeTime","seconds","duration","getPlayer","resumeTime","Math","floor","setCurrentTime","playing","bind","playbackRate","currentTime","percent","Promise","resolve","session","setSessionState","id","setPercent","finally","getNextActivityButtonData","response","data","JSON","parse","parseInt","next_activity_auto","is_restricted","hasnextcm","link","nextcm_url","first","click","render","html","fail","closest","each","tabs","index","anchor","getAttribute","time","addCuePoint","Number","exeception","event","removeClass","addClass","offsetTop","parentNode","scrollTo","top","left","behavior","ResizeObserver","videoHeight","videoWidth","currentWidth","observe","document","querySelector","cmId"],"mappings":"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"}