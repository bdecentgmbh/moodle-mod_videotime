<<<<<<< HEAD
<<<<<<< HEAD
{"version":3,"sources":["../src/videotime.js"],"names":["define","$","VideoTimeBase","Log","Notification","Player","VideoTime","elementId","cmId","hasPro","interval","instance","call","prototype","Object","create","constructor","initialize","debug","options","autoplay","controls","sources","type","src","vimeo_url","loop","option_loop","fluid","responsive","playsinline","playbackRates","speed","muted","techOrder","height","width","player","on","resume_playback","resume_time","resumed","duration","getPlayer","resumeTime","Math","floor","setTimeout","setCurrentPosition","url","URL","window","location","href","q","searchParams","get","starttime","match","setStartTime","then","find","catch","exception","addListeners","i","plugin","plugins","length","closest","each","tabs","index","anchor","getAttribute","time","addCuePoint","exeception","bind","event","data","removeClass","addClass","offsetTop","parentNode","scrollTo","top","left","behavior","played","startWatchInterval","view","playing","playbackRate","currentTime","percent","handleEnd","observer","ResizeObserver","videoHeight","videoWidth","currentWidth","observe","document","querySelector","getDuration","Promise","resolve","getPlaybackRate","secs","getCurrentPosition"],"mappings":"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","sourcesContent":["define([\n    \"jquery\",\n    \"mod_videotime/videotime\",\n    \"core/log\",\n    \"core/notification\",\n    \"media_videojs/video-lazy\",\n    \"media_videojs/Youtube-lazy\"\n], function ($, VideoTimeBase, Log, Notification, Player) {\n    function VideoTime(elementId, cmId, hasPro, interval, instance) {\n        VideoTimeBase.call(this, elementId, cmId, hasPro, interval, instance);\n    }\n\n    VideoTime.prototype = Object.create(VideoTimeBase.prototype);\n    VideoTime.prototype.constructor = VideoTime;\n\n    VideoTime.prototype.initialize = function () {\n        Log.debug(\"Initializing Video Time \" + this.elementId);\n        let instance = this.instance,\n            options = {\n                autoplay: Number(instance.autoplay),\n                controls: Number(instance.controls),\n                sources: [{type: instance.type, src: instance.vimeo_url}],\n                loop: Number(instance.option_loop),\n                fluid: Number(instance.responsive),\n                playsinline: Number(instance.playsinline),\n                playbackRates: Number(instance.speed)\n                    ? [0.5, 0.75, 1, 1.25, 1.5, 2]\n                    : [1],\n                muted: Number(instance.muted)\n            };\n        if (instance.type === \"video/youtube\") {\n            options.techOrder = [\"youtube\"];\n        }\n        if (!Number(instance.responsive) && Number(instance.height) && Number(instance.width)) {\n            options.height = Number(instance.height);\n            options.width = Number(instance.width);\n        }\n        Log.debug(\"Initializing VideoJS player with options:\");\n        Log.debug(options);\n        this.player = new Player(this.elementId, options);\n\n        this.player.on(\"loadedmetadata\", () => {\n            if (!instance.resume_playback || instance.resume_time <= 0 || this.resumed) {\n                return true;\n            }\n\n            let duration = this.getPlayer().duration(),\n                resumeTime = instance.resume_time;\n            // Duration is often a little greater than a resume time at the end of the video.\n            // A user may have watched 100 seconds when the video ends, but the duration may be\n            // 100.56 seconds. BUT, sometimes the duration is rounded depending on when the\n            // video loads, so it may be 101 seconds. Hence the +1 and Math.floor usage.\n            if (resumeTime + 1 >= Math.floor(duration)) {\n                Log.debug(\n                    \"VIDEO_TIME video finished, resuming at start of video.\"\n                );\n                resumeTime = 0;\n            }\n            Log.debug(\"VIDEO_TIME duration is \" + duration);\n            Log.debug(\"VIDEO_TIME resuming at \" + resumeTime);\n            if (resumeTime) {\n                setTimeout(() => {\n                this.setCurrentPosition(resumeTime);\n                }, 10);\n            }\n            return true;\n        });\n\n        let url = new URL(window.location.href),\n            q = url.searchParams.get(\"q\"),\n            starttime = (url.searchParams.get(\"time\") || \"\").match(\n                /^([0-9]+:){0,2}([0-9]+)(\\.[0-9]+)$/\n            );\n        if (starttime) {\n            this.setStartTime(starttime[0])\n                .then(function() {\n                    if (q && window.find) {\n                        window.find(q);\n                    }\n                    return true;\n                })\n                .catch(Notification.exception);\n        } else if (q && window.find) {\n            window.find(q);\n        }\n\n        this.addListeners();\n\n        for (let i = 0; i < this.plugins.length; i++) {\n            const plugin = this.plugins[i];\n            plugin.initialize(this, instance);\n        }\n\n        return true;\n    };\n\n    VideoTime.prototype.addListeners = function () {\n        // If this is a tab play set time cues and listener.\n        $($(\"#\" + this.elementId).closest(\".videotimetabs\")).each(\n            function(i, tabs) {\n                $(tabs)\n                    .find('[data-action=\"cue\"]')\n                    .each(\n                        function(index, anchor) {\n                            let starttime = anchor.getAttribute(\"data-start\"),\n                                time = starttime.match(\n                                    /((([0-9]+):)?(([0-9]+):))?([0-9]+(\\.[0-9]+))/\n                                );\n                            if (time) {\n                                this.player\n                                    .addCuePoint(\n                                        3600 * Number(time[3] || 0) +\n                                            60 * Number(time[5] || 0) +\n                                            Number(time[6]),\n                                        {\n                                            starttime: starttime\n                                        }\n                                    )\n                                    .catch(Notification.exeception);\n                            }\n                        }.bind(this)\n                    );\n\n                this.player.on(\"cuepoint\", function(event) {\n                    if (event.data.starttime) {\n                        $(tabs)\n                            .find(\".videotime-highlight\")\n                            .removeClass(\"videotime-highlight\");\n                        $(tabs)\n                            .find(\n                                '[data-action=\"cue\"][data-start=\"' +\n                                    event.data.starttime +\n                                    '\"]'\n                            )\n                            .closest(\".row\")\n                            .addClass(\"videotime-highlight\");\n                        $(\".videotime-highlight\").each(function() {\n                            if (this.offsetTop) {\n                                this.parentNode.scrollTo({\n                                    top: this.offsetTop - 50,\n                                    left: 0,\n                                    behavior: \"smooth\"\n                                });\n                            }\n                        });\n                    }\n                });\n            }.bind(this)\n        );\n\n        if (!this.player) {\n            Log.debug(\n                \"Player was not properly initialized for course module \" +\n                    this.cmId\n            );\n            return;\n        }\n\n        // Fire view event in Moodle on first play only.\n        this.player.on(\"play\", () => {\n            if (!this.played) {\n                if (this.hasPro) {\n                    this.startWatchInterval();\n                }\n                // Free version can still mark completion on video time view.\n                this.view();\n            }\n            return true;\n        });\n\n        // Features beyond this point are for pro only.\n        if (!this.hasPro) {\n            return;\n        }\n\n        // Note: Vimeo player does not support multiple events in a single on() call. Each requires it's own function.\n\n        // Catch all events where video plays.\n        this.player.on(\n            \"play\",\n            function() {\n                this.playing = true;\n                Log.debug(\"VIDEO_TIME play\");\n            }.bind(this)\n        );\n        this.player.on(\n            \"playing\",\n            function() {\n                this.playing = true;\n                Log.debug(\"VIDEO_TIME playing\");\n            }.bind(this)\n        );\n\n        // Catch all events where video stops.\n        this.player.on(\n            \"pause\",\n            function() {\n                this.playing = false;\n                Log.debug(\"VIDEO_TIME pause\");\n            }.bind(this)\n        );\n        this.player.on(\n            \"stalled\",\n            function() {\n                this.playing = false;\n                Log.debug(\"VIDEO_TIME stalled\");\n            }.bind(this)\n        );\n        this.player.on(\n            \"suspend\",\n            function() {\n                this.playing = false;\n                Log.debug(\"VIDEO_TIME suspend\");\n            }.bind(this)\n        );\n        this.player.on(\n            \"abort\",\n            function() {\n                this.playing = false;\n                Log.debug(\"VIDEO_TIME abort\");\n            }.bind(this)\n        );\n\n        this.player.on(\n            \"playbackrateschange\",\n            function() {\n                this.playbackRate = this.player.playbackRate();\n            }.bind(this)\n        );\n\n        // Always update internal values for percent and current time watched.\n        this.player.on(\n            \"timeupdate\",\n            function() {\n                this.currentTime = this.player.currentTime();\n                this.percent = this.currentTime / this.player.duration();\n                Log.debug(\n                    \"VIDEO_TIME timeupdate. Percent: \" +\n                        this.percent +\n                        \". Current time: \" +\n                        this.currentTime\n                );\n            }.bind(this)\n        );\n\n        // Initiate video finish procedure.\n        this.player.on(\"ended\", this.handleEnd.bind(this));\n        this.player.on(\"pause\", this.handleEnd.bind(this));\n\n        // Readjust height when responsive player is resized.\n        if (this.player.options().responsive) {\n            let observer = new ResizeObserver(() => {\n                this.player.height(\n                    (this.player.videoHeight() / this.player.videoWidth()) *\n                        this.player.currentWidth()\n                );\n            });\n            observer.observe(document.querySelector(\"#\" + this.elementId));\n        }\n    };\n\n    VideoTime.prototype.setStartTime = function (starttime) {\n        let time = starttime.match(\n            /((([0-9]+):)?(([0-9]+):))?([0-9]+(\\.[0-9]+))/\n        );\n        if (time) {\n            this.resumeTime =\n                3600 * Number(time[3] || 0) +\n                60 * Number(time[5] || 0) +\n                Number(time[6]);\n            return this.player.currentTime(this.resumeTime);\n        }\n        Log.debug(\"Set start time:\" + starttime);\n        return this.player.currentTime();\n    };\n\n    VideoTime.prototype.getDuration = function () {\n        return new Promise(resolve => {\n            resolve(this.player.duration());\n            return true;\n        });\n    };\n\n    VideoTime.prototype.getPlaybackRate = function () {\n        return new Promise(resolve => {\n            resolve(this.player.playbackRate());\n            return true;\n        });\n    };\n\n    VideoTime.prototype.setCurrentPosition = function (secs) {\n        return new Promise(resolve => {\n            resolve(this.player.currentTime(secs));\n            return true;\n        });\n    };\n\n    VideoTime.prototype.getCurrentPosition = function () {\n        return new Promise(resolve => {\n            resolve(this.player.currentTime());\n            return true;\n        });\n    };\n\n    return VideoTime;\n});"],"file":"videotime.min.js"}
=======
{"version":3,"file":"videotime.min.js","sources":["../src/videotime.js"],"sourcesContent":["/*\n * Video time player specific js\n *\n * @package    videotimeplugin_videojs\n * @module     videotimeplugin_videojs/videotime\n * @copyright  2022 bdecent gmbh <https://bdecent.de>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from \"jquery\";\nimport VideoTimeBase from \"mod_videotime/videotime\";\nimport Log from \"core/log\";\nimport Notification from \"core/notification\";\nimport Player from \"media_videojs/video-lazy\";\nimport \"media_videojs/Youtube-lazy\";\n\nexport default class VideoTime extends VideoTimeBase {\n    initialize() {\n        Log.debug(\"Initializing Video Time \" + this.elementId);\n\n        const instance = this.instance,\n            options = {\n                autoplay: Number(instance.autoplay),\n                controls: Number(instance.controls),\n                sources: [{type: instance.type, src: instance.vimeo_url}],\n                loop: Number(instance.option_loop),\n                fluid: Number(instance.responsive),\n                playsinline: Number(instance.playsinline),\n                playbackRates: Number(instance.speed)\n                    ? [0.5, 0.75, 1, 1.25, 1.5, 2]\n                    : [1],\n                muted: Number(instance.muted)\n            };\n        if (instance.type === \"video/youtube\") {\n            options.techOrder = [\"youtube\"];\n        }\n        if (!Number(instance.responsive) && Number(instance.height) && Number(instance.width)) {\n            options.height = Number(instance.height);\n            options.width = Number(instance.width);\n        }\n        Log.debug(\"Initializing VideoJS player with options:\");\n        Log.debug(options);\n        this.player = new Player(this.elementId, options);\n\n        this.player.on(\"loadedmetadata\", () => {\n            if (!instance.resume_playback || instance.resume_time <= 0 || this.resumed) {\n                return true;\n            }\n\n            let duration = this.getPlayer().duration(),\n                resumeTime = instance.resume_time;\n            // Duration is often a little greater than a resume time at the end of the video.\n            // A user may have watched 100 seconds when the video ends, but the duration may be\n            // 100.56 seconds. BUT, sometimes the duration is rounded depending on when the\n            // video loads, so it may be 101 seconds. Hence the +1 and Math.floor usage.\n            if (resumeTime + 1 >= Math.floor(duration)) {\n                Log.debug(\n                    \"VIDEO_TIME video finished, resuming at start of video.\"\n                );\n                resumeTime = 0;\n            }\n            Log.debug(\"VIDEO_TIME duration is \" + duration);\n            Log.debug(\"VIDEO_TIME resuming at \" + resumeTime);\n            if (resumeTime) {\n                setTimeout(() => {\n                this.setCurrentPosition(resumeTime);\n                }, 10);\n            }\n            return true;\n        });\n\n        this.handleStartTime();\n\n        this.addListeners();\n\n        for (let i = 0; i < this.plugins.length; i++) {\n            const plugin = this.plugins[i];\n            plugin.initialize(this, instance);\n        }\n\n        return true;\n    }\n\n    /**\n     * Register player events to respond to user interaction and play progress.\n     */\n    addListeners() {\n        // If this is a tab play set time cues and listener.\n        $($(\"#\" + this.elementId).closest(\".videotimetabs\")).each(\n            function(i, tabs) {\n                $(tabs)\n                    .find('[data-action=\"cue\"]')\n                    .each(\n                        async function(index, anchor) {\n                            let starttime = anchor.getAttribute(\"data-start\"),\n                                time = starttime.match(\n                                    /((([0-9]+):)?(([0-9]+):))?([0-9]+(\\.[0-9]+))/\n                                );\n                            if (time) {\n                                try {\n                                    await this.player.addCuePoint(\n                                        3600 * Number(time[3] || 0) +\n                                            60 * Number(time[5] || 0) +\n                                            Number(time[6]),\n                                        {\n                                            starttime: starttime\n                                        }\n                                    );\n                                } catch (e) {\n                                    Notification.exception(e);\n                                }\n                            }\n                        }.bind(this)\n                    );\n\n                this.player.on(\"cuepoint\", function(event) {\n                    if (event.data.starttime) {\n                        $(tabs)\n                            .find(\".videotime-highlight\")\n                            .removeClass(\"videotime-highlight\");\n                        $(tabs)\n                            .find(\n                                '[data-action=\"cue\"][data-start=\"' +\n                                    event.data.starttime +\n                                    '\"]'\n                            )\n                            .closest(\".row\")\n                            .addClass(\"videotime-highlight\");\n                        $(\".videotime-highlight\").each(function() {\n                            if (this.offsetTop) {\n                                this.parentNode.scrollTo({\n                                    top: this.offsetTop - 50,\n                                    left: 0,\n                                    behavior: \"smooth\"\n                                });\n                            }\n                        });\n                    }\n                });\n            }.bind(this)\n        );\n\n        if (!this.player) {\n            Log.debug(\n                \"Player was not properly initialized for course module \" +\n                    this.cmId\n            );\n            return;\n        }\n\n        // Fire view event in Moodle on first play only.\n        this.player.on(\"play\", () => {\n            if (!this.played) {\n                if (this.hasPro) {\n                    this.startWatchInterval();\n                }\n                // Free version can still mark completion on video time view.\n                this.view();\n            }\n            return true;\n        });\n\n        // Features beyond this point are for pro only.\n        if (!this.hasPro) {\n            return;\n        }\n\n        // Note: Vimeo player does not support multiple events in a single on() call. Each requires it's own function.\n\n        // Catch all events where video plays.\n        this.player.on(\n            \"play\",\n            function() {\n                this.playing = true;\n                Log.debug(\"VIDEO_TIME play\");\n            }.bind(this)\n        );\n        this.player.on(\n            \"playing\",\n            function() {\n                this.playing = true;\n                Log.debug(\"VIDEO_TIME playing\");\n            }.bind(this)\n        );\n\n        // Catch all events where video stops.\n        this.player.on(\n            \"pause\",\n            function() {\n                this.playing = false;\n                Log.debug(\"VIDEO_TIME pause\");\n            }.bind(this)\n        );\n        this.player.on(\n            \"stalled\",\n            function() {\n                this.playing = false;\n                Log.debug(\"VIDEO_TIME stalled\");\n            }.bind(this)\n        );\n        this.player.on(\n            \"suspend\",\n            function() {\n                this.playing = false;\n                Log.debug(\"VIDEO_TIME suspend\");\n            }.bind(this)\n        );\n        this.player.on(\n            \"abort\",\n            function() {\n                this.playing = false;\n                Log.debug(\"VIDEO_TIME abort\");\n            }.bind(this)\n        );\n\n        this.player.on(\n            \"playbackrateschange\",\n            function() {\n                this.playbackRate = this.player.playbackRate();\n            }.bind(this)\n        );\n\n        // Always update internal values for percent and current time watched.\n        this.player.on(\n            \"timeupdate\",\n            function() {\n                this.currentTime = this.player.currentTime();\n                this.percent = this.currentTime / this.player.duration();\n                Log.debug(\n                    \"VIDEO_TIME timeupdate. Percent: \" +\n                        this.percent +\n                        \". Current time: \" +\n                        this.currentTime\n                );\n            }.bind(this)\n        );\n\n        // Initiate video finish procedure.\n        this.player.on(\"ended\", this.handleEnd.bind(this));\n        this.player.on(\"pause\", this.handlePause.bind(this));\n\n        // Readjust height when responsive player is resized.\n        if (this.player.options().responsive) {\n            let observer = new ResizeObserver(() => {\n                this.player.height(\n                    (this.player.videoHeight() / this.player.videoWidth()) *\n                        this.player.currentWidth()\n                );\n            });\n            observer.observe(document.querySelector(\"#\" + this.elementId));\n        }\n    }\n\n    /**\n     * Parse start time and set player\n     *\n     * @param {string} starttime\n     * @returns {Promise}\n     */\n    async setStartTime(starttime) {\n        let time = starttime.match(\n            /((([0-9]+):)?(([0-9]+):))?([0-9]+(\\.[0-9]+))/\n        );\n        if (time) {\n            this.resumeTime =\n                3600 * Number(time[3] || 0) +\n                60 * Number(time[5] || 0) +\n                Number(time[6]);\n            return await this.player.currentTime(this.resumeTime);\n        }\n        Log.debug(\"Set start time:\" + starttime);\n        return await this.player.currentTime();\n    }\n\n    /**\n     * Get play back rate\n     *\n     * @returns {Promise}\n     */\n    getDuration() {\n        return new Promise(resolve => {\n            resolve(this.player.duration());\n            return true;\n        });\n    }\n\n    /**\n     * Get duration of video\n     *\n     * @returns {Promise}\n     */\n    getPlaybackRate() {\n        return new Promise(resolve => {\n            resolve(this.player.playbackRate());\n            return true;\n        });\n    }\n\n    /**\n     * Set current time of player\n     *\n     * @param {float} secs time\n     * @returns {Promise}\n     */\n    setCurrentPosition(secs) {\n        return new Promise(resolve => {\n            resolve(this.player.currentTime(secs));\n            return true;\n        });\n    }\n\n    /**\n     * Get current time of player\n     *\n     * @returns {Promise}\n     */\n    getCurrentPosition() {\n        return new Promise(resolve => {\n            resolve(this.player.currentTime());\n            return true;\n        });\n    }\n\n    /**\n     * Get pause state\n     *\n     * @return {bool}\n     */\n    getPaused() {\n        const paused = this.player.paused();\n        return paused;\n    }\n}\n"],"names":["VideoTime","VideoTimeBase","initialize","debug","this","elementId","instance","options","autoplay","Number","controls","sources","type","src","vimeo_url","loop","option_loop","fluid","responsive","playsinline","playbackRates","speed","muted","techOrder","height","width","player","Player","on","resume_playback","resume_time","resumed","duration","getPlayer","resumeTime","Math","floor","setTimeout","setCurrentPosition","handleStartTime","addListeners","i","plugins","length","closest","each","tabs","find","async","index","anchor","starttime","getAttribute","time","match","addCuePoint","e","exception","bind","event","data","removeClass","addClass","offsetTop","parentNode","scrollTo","top","left","behavior","played","hasPro","startWatchInterval","view","playing","playbackRate","currentTime","percent","handleEnd","handlePause","ResizeObserver","videoHeight","videoWidth","currentWidth","observe","document","querySelector","cmId","getDuration","Promise","resolve","getPlaybackRate","secs","getCurrentPosition","getPaused","paused"],"mappings":"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"}
>>>>>>> 570d6bf (VID-857: Automate go to next activity with VideoJS)
=======
{"version":3,"file":"videotime.min.js","sources":["../src/videotime.js"],"sourcesContent":["/*\n * Video time player specific js\n *\n * @package    videotimeplugin_videojs\n * @module     videotimeplugin_videojs/videotime\n * @copyright  2022 bdecent gmbh <https://bdecent.de>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from \"jquery\";\nimport VideoTimeBase from \"mod_videotime/videotime\";\nimport Log from \"core/log\";\nimport Notification from \"core/notification\";\nimport Player from \"media_videojs/video-lazy\";\nimport \"media_videojs/Youtube-lazy\";\n\nexport default class VideoTime extends VideoTimeBase {\n    initialize() {\n        Log.debug(\"Initializing Video Time \" + this.elementId);\n\n        const instance = this.instance,\n            options = {\n                autoplay: Number(instance.autoplay),\n                controls: Number(instance.controls),\n                sources: [{type: instance.type, src: instance.vimeo_url}],\n                loop: Number(instance.option_loop),\n                fluid: Number(instance.responsive),\n                playsinline: Number(instance.playsinline),\n                playbackRates: Number(instance.speed)\n                    ? [0.5, 0.75, 1, 1.25, 1.5, 2]\n                    : [1],\n                muted: Number(instance.muted)\n            };\n        if (instance.type === \"video/youtube\") {\n            options.techOrder = [\"youtube\"];\n        }\n        if (!Number(instance.responsive) && Number(instance.height) && Number(instance.width)) {\n            options.height = Number(instance.height);\n            options.width = Number(instance.width);\n        }\n        Log.debug(\"Initializing VideoJS player with options:\");\n        Log.debug(options);\n        this.player = new Player(this.elementId, options);\n\n        this.player.on(\"loadedmetadata\", () => {\n            if (!instance.resume_playback || instance.resume_time <= 0 || this.resumed) {\n                return true;\n            }\n\n            let duration = this.getPlayer().duration(),\n                resumeTime = instance.resume_time;\n            // Duration is often a little greater than a resume time at the end of the video.\n            // A user may have watched 100 seconds when the video ends, but the duration may be\n            // 100.56 seconds. BUT, sometimes the duration is rounded depending on when the\n            // video loads, so it may be 101 seconds. Hence the +1 and Math.floor usage.\n            if (resumeTime + 1 >= Math.floor(duration)) {\n                Log.debug(\n                    \"VIDEO_TIME video finished, resuming at start of video.\"\n                );\n                resumeTime = 0;\n            }\n            Log.debug(\"VIDEO_TIME duration is \" + duration);\n            Log.debug(\"VIDEO_TIME resuming at \" + resumeTime);\n            if (resumeTime) {\n                setTimeout(() => {\n                this.setCurrentPosition(resumeTime);\n                }, 10);\n            }\n            return true;\n        });\n\n        this.handleStartTime();\n\n        this.addListeners();\n\n        for (let i = 0; i < this.plugins.length; i++) {\n            const plugin = this.plugins[i];\n            plugin.initialize(this, instance);\n        }\n\n        return true;\n    }\n\n    /**\n     * Register player events to respond to user interaction and play progress.\n     */\n    async addListeners() {\n        // If this is a tab play set time cues and listener.\n        $($(\"#\" + this.elementId).closest(\".videotimetabs\")).each(\n            function(i, tabs) {\n                $(tabs)\n                    .find('[data-action=\"cue\"]')\n                    .each(\n                        async function(index, anchor) {\n                            let starttime = anchor.getAttribute(\"data-start\"),\n                                time = starttime.match(\n                                    /((([0-9]+):)?(([0-9]+):))?([0-9]+(\\.[0-9]+))/\n                                );\n                            if (time) {\n                                try {\n                                    await this.player.addCuePoint(\n                                        3600 * Number(time[3] || 0) +\n                                            60 * Number(time[5] || 0) +\n                                            Number(time[6]),\n                                        {\n                                            starttime: starttime\n                                        }\n                                    );\n                                } catch (e) {\n                                    Notification.exception(e);\n                                }\n                            }\n                        }.bind(this)\n                    );\n\n                this.player.on(\"cuepoint\", function(event) {\n                    if (event.data.starttime) {\n                        $(tabs)\n                            .find(\".videotime-highlight\")\n                            .removeClass(\"videotime-highlight\");\n                        $(tabs)\n                            .find(\n                                '[data-action=\"cue\"][data-start=\"' +\n                                    event.data.starttime +\n                                    '\"]'\n                            )\n                            .closest(\".row\")\n                            .addClass(\"videotime-highlight\");\n                        $(\".videotime-highlight\").each(function() {\n                            if (this.offsetTop) {\n                                this.parentNode.scrollTo({\n                                    top: this.offsetTop - 50,\n                                    left: 0,\n                                    behavior: \"smooth\"\n                                });\n                            }\n                        });\n                    }\n                });\n            }.bind(this)\n        );\n\n        if (!this.player) {\n            Log.debug(\n                \"Player was not properly initialized for course module \" +\n                    this.cmId\n            );\n            return;\n        }\n\n        // Fire view event in Moodle on first play only.\n        this.player.on(\"play\", () => {\n            if (!this.played) {\n                if (this.hasPro) {\n                    this.startWatchInterval();\n                }\n                // Free version can still mark completion on video time view.\n                this.view();\n            }\n            return true;\n        });\n\n        // Features beyond this point are for pro only.\n        if (!this.hasPro) {\n            return;\n        }\n\n        // Note: Vimeo player does not support multiple events in a single on() call. Each requires it's own function.\n\n        // Catch all events where video plays.\n        this.player.on(\n            \"play\",\n            function() {\n                this.playing = true;\n                Log.debug(\"VIDEO_TIME play\");\n            }.bind(this)\n        );\n        this.player.on(\n            \"playing\",\n            function() {\n                this.playing = true;\n                Log.debug(\"VIDEO_TIME playing\");\n            }.bind(this)\n        );\n\n        // Catch all events where video stops.\n        this.player.on(\n            \"pause\",\n            function() {\n                this.playing = false;\n                Log.debug(\"VIDEO_TIME pause\");\n            }.bind(this)\n        );\n        this.player.on(\n            \"stalled\",\n            function() {\n                this.playing = false;\n                Log.debug(\"VIDEO_TIME stalled\");\n            }.bind(this)\n        );\n        this.player.on(\n            \"suspend\",\n            function() {\n                this.playing = false;\n                Log.debug(\"VIDEO_TIME suspend\");\n            }.bind(this)\n        );\n        this.player.on(\n            \"abort\",\n            function() {\n                this.playing = false;\n                Log.debug(\"VIDEO_TIME abort\");\n            }.bind(this)\n        );\n\n        this.player.on(\n            \"playbackrateschange\",\n            function() {\n                this.playbackRate = this.player.playbackRate();\n            }.bind(this)\n        );\n\n        // Always update internal values for percent and current time watched.\n        this.player.on(\n            \"timeupdate\",\n            function() {\n                this.currentTime = this.player.currentTime();\n                this.percent = this.currentTime / this.player.duration();\n                Log.debug(\n                    \"VIDEO_TIME timeupdate. Percent: \" +\n                        this.percent +\n                        \". Current time: \" +\n                        this.currentTime\n                );\n            }.bind(this)\n        );\n\n        // Initiate video finish procedure.\n        this.player.on(\"ended\", this.handleEnd.bind(this));\n        this.player.on(\"pause\", this.handlePause.bind(this));\n\n        // Readjust height when responsive player is resized.\n        if (this.player.options().responsive) {\n            let observer = new ResizeObserver(() => {\n                this.player.height(\n                    (this.player.videoHeight() / this.player.videoWidth()) *\n                        this.player.currentWidth()\n                );\n            });\n            observer.observe(document.querySelector(\"#\" + this.elementId));\n        }\n    }\n\n    /**\n     * Parse start time and set player\n     *\n     * @param {string} starttime\n     * @returns {Promise}\n     */\n    async setStartTime(starttime) {\n        let time = starttime.match(\n            /((([0-9]+):)?(([0-9]+):))?([0-9]+(\\.[0-9]+))/\n        );\n        if (time) {\n            this.resumeTime =\n                3600 * Number(time[3] || 0) +\n                60 * Number(time[5] || 0) +\n                Number(time[6]);\n            return await this.player.currentTime(this.resumeTime);\n        }\n        Log.debug(\"Set start time:\" + starttime);\n        return await this.player.currentTime();\n    }\n\n    /**\n     * Get play back rate\n     *\n     * @returns {Promise}\n     */\n    getDuration() {\n        return new Promise(resolve => {\n            resolve(this.player.duration());\n            return true;\n        });\n    }\n\n    /**\n     * Get duration of video\n     *\n     * @returns {Promise}\n     */\n    getPlaybackRate() {\n        return new Promise(resolve => {\n            resolve(this.player.playbackRate());\n            return true;\n        });\n    }\n\n    /**\n     * Set current time of player\n     *\n     * @param {float} secs time\n     * @returns {Promise}\n     */\n    setCurrentPosition(secs) {\n        return new Promise(resolve => {\n            resolve(this.player.currentTime(secs));\n            return true;\n        });\n    }\n\n    /**\n     * Get current time of player\n     *\n     * @returns {Promise}\n     */\n    async getCurrentPosition() {\n        let position = await this.player.currentTime();\n        this.plugins.forEach(plugin => {\n            position = plugin.getCurrentPosition(position);\n        });\n        return position;\n    }\n\n    /**\n     * Get pause state\n     *\n     * @return {bool}\n     */\n    getPaused() {\n        const paused = this.player.paused();\n        return paused;\n    }\n}\n"],"names":["VideoTime","VideoTimeBase","initialize","debug","this","elementId","instance","options","autoplay","Number","controls","sources","type","src","vimeo_url","loop","option_loop","fluid","responsive","playsinline","playbackRates","speed","muted","techOrder","height","width","player","Player","on","resume_playback","resume_time","resumed","duration","getPlayer","resumeTime","Math","floor","setTimeout","setCurrentPosition","handleStartTime","addListeners","i","plugins","length","closest","each","tabs","find","async","index","anchor","starttime","getAttribute","time","match","addCuePoint","e","exception","bind","event","data","removeClass","addClass","offsetTop","parentNode","scrollTo","top","left","behavior","played","hasPro","startWatchInterval","view","playing","playbackRate","currentTime","percent","handleEnd","handlePause","ResizeObserver","videoHeight","videoWidth","currentWidth","observe","document","querySelector","cmId","getDuration","Promise","resolve","getPlaybackRate","secs","position","forEach","plugin","getCurrentPosition","getPaused","paused"],"mappings":"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"}
>>>>>>> c8ef01f (VID-845: Check for ff before updating position)
