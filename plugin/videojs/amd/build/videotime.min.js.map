{"version":3,"file":"videotime.min.js","sources":["../src/videotime.js"],"sourcesContent":["/*\n * Video time player specific js\n *\n * @package    videotimeplugin_videojs\n * @module     videotimeplugin_videojs/videotime\n * @copyright  2022 bdecent gmbh <https://bdecent.de>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from \"jquery\";\nimport VideoTimeBase from \"mod_videotime/videotime\";\nimport Log from \"core/log\";\nimport Notification from \"core/notification\";\nimport Player from \"media_videojs/video-lazy\";\nimport Templates from \"core/templates\";\n\nexport default class VideoTime extends VideoTimeBase {\n\n    initialize() {\n        Log.debug('Initializing Video Time ' + this.elementId);\n\n        this.getInstance().then((instance) => {\n            let options = {\n                autoplay: instance.autoplay,\n                controls: instance.controls,\n                responsive: instance.responsive,\n                playbackRates: instance.speed ? [0.5, 0.75, 1, 1.25, 1.5, 2] : [1],\n                muted: instance.muted\n            };\n            if (!instance.responsive && instance.height && instance.width) {\n                options.height = instance.height;\n                options.width = instance.width;\n            }\n            Log.debug('Initializing VideoJS player with options:');\n            Log.debug(options);\n            this.player = new Player(this.elementId, options);\n\n            let url = new URL(window.location.href),\n                q = url.searchParams.get('q'),\n                starttime = (url.searchParams.get('time') || '').match(/^([0-9]+:){0,2}([0-9]+)(\\.[0-9]+)$/);\n            if (starttime) {\n                this.setStartTime(starttime[0]).then(function() {\n                    if (q && window.find) {\n                        window.find(q);\n                    }\n                    return true;\n                }).catch(Notification.exception);\n            } else if (q && window.find) {\n                window.find(q);\n            }\n\n            this.addListeners();\n\n            for (let i = 0; i < this.plugins.length; i++) {\n                const plugin = this.plugins[i];\n                plugin.initialize(this, instance);\n            }\n\n            return true;\n        }).catch(Notification.exeption);\n    }\n\n    /**\n     * Register player events to respond to user interaction and play progress.\n     */\n    addListeners() {\n        if (!this.player) {\n            Log.debug('Player was not properly initialized for course module ' + this.cmId);\n            return;\n        }\n\n        // Fire view event in Moodle on first play only.\n        this.player.on('play', () => {\n            if (!this.played) {\n                if (this.hasPro) {\n                    // Getting a new session on first play.\n                    this.getSession().then(() => {\n                        this.view();\n                        this.startWatchInterval();\n                        return true;\n                    }).catch(Notification.exception);\n                } else {\n                    // Free version can still mark completion on video time view.\n                    this.view();\n                }\n            }\n            return true;\n        });\n\n        // Features beyond this point are for pro only.\n        if (!this.hasPro) {\n            return;\n        }\n\n        // If resume is present force seek the player to that point.\n        this.getResumeTime().then((seconds) => {\n            if (seconds <= 0) {\n                return true;\n            }\n\n                let duration = this.getPlayer().duration(),\n                    resumeTime = seconds;\n                // Duration is often a little greater than a resume time at the end of the video.\n                // A user may have watched 100 seconds when the video ends, but the duration may be\n                // 100.56 seconds. BUT, sometimes the duration is rounded depending on when the\n                // video loads, so it may be 101 seconds. Hence the +1 and Math.floor usage.\n                if (seconds + 1 >= Math.floor(duration)) {\n                    Log.debug('VIDEO_TIME video finished, resuming at start of video.');\n                    resumeTime = 0;\n                }\n                Log.debug('VIDEO_TIME resuming at ' + resumeTime);\n                this.getPlayer().currentTime(resumeTime);\n            return true;\n        }).catch(Notification.exception);\n\n        // Note: Vimeo player does not support multiple events in a single on() call. Each requires it's own function.\n\n        // Catch all events where video plays.\n        this.player.on('play', function() {\n            this.playing = true;\n            Log.debug('VIDEO_TIME play');\n        }.bind(this));\n        this.player.on('playing', function() {\n            this.playing = true;\n            Log.debug('VIDEO_TIME playing');\n        }.bind(this));\n\n        // Catch all events where video stops.\n        this.player.on('pause', function() {\n            this.playing = false;\n            Log.debug('VIDEO_TIME pause');\n        }.bind(this));\n        this.player.on('stalled', function() {\n            this.playing = false;\n            Log.debug('VIDEO_TIME stalled');\n        }.bind(this));\n        this.player.on('suspend', function() {\n            this.playing = false;\n            Log.debug('VIDEO_TIME suspend');\n        }.bind(this));\n        this.player.on('abort', function() {\n            this.playing = false;\n            Log.debug('VIDEO_TIME abort');\n        }.bind(this));\n\n        this.player.on('playbackratechange', function() {\n            this.playbackRate = this.player.playbackRate();\n        }.bind(this));\n\n        // Always update internal values for percent and current time watched.\n        this.player.on('timeupdate', function() {\n            this.currentTime = this.player.currentTime();\n            this.percent = 100 * this.currentTime / this.player.duration();\n            Log.debug('VIDEO_TIME timeupdate. Percent: ' + this.percent + '. Current time: ' + this.currentTime);\n        }.bind(this));\n\n        // Initiate video finish procedure.\n        this.player.on('ended', function() {\n            this.playing = false;\n            Log.debug('VIDEO_TIME ended');\n\n            new Promise(function(resolve) {\n                this.getSession().then(function(session) {\n                    resolve(session);\n                    return true;\n                }).catch(Notification.exception);\n            }.bind(this)).then(function(session) {\n                this.setSessionState(session.id, 1);\n                return session;\n            }.bind(this)).then(function(session) {\n                this.setPercent(session.id, 1);\n                return session;\n            }.bind(this)).then(function(session) {\n                this.setCurrentTime(session.id, this.currentTime);\n                return session;\n            }.bind(this)).catch(Notification.exception).finally(function() {\n                this.getSession().then(function(session) {\n                    this.getNextActivityButtonData(session.id).then(function(response) {\n                        let data = JSON.parse(response.data);\n\n                        if (data.instance && parseInt(data.instance.next_activity_auto)) {\n                            if (!data.is_restricted && data.hasnextcm) {\n                                let link = $('.aalink[href=\"' + data.nextcm_url + '\"] img').first();\n                                if ($('.path-course-view').length && link) {\n                                    link.click();\n                                } else {\n                                    window.location.href = data.nextcm_url;\n                                }\n                            }\n                        }\n\n                        Templates.render('videotime/next_activity_button', JSON.parse(response.data))\n                            .then(function(html) {\n                                $('#next-activity-button').html(html);\n                                return true;\n                            }).fail(Notification.exception);\n                        return true;\n                    }).fail(Notification.exception);\n                }.bind(this)).catch(Notification.exception);\n            }.bind(this)).fail(Notification.exception);\n        }.bind(this));\n\n        // If this is a tab play set time cues and listener.\n        $($('#' + this.elementId).closest('.videotimetabs')).each(function(i, tabs) {\n           $(tabs).find('[data-action=\"cue\"]').each(function(index, anchor) {\n                let starttime = anchor.getAttribute('data-start'),\n                    time = starttime.match(/((([0-9]+):)?(([0-9]+):))?([0-9]+(\\.[0-9]+))/);\n                if (time) {\n                    this.player.addCuePoint(\n                        3600 * Number(time[3] || 0) + 60 * Number(time[5] || 0) + Number(time[6]),\n                        {\n                            starttime: starttime\n                        }\n                    ).catch(Notification.exeception);\n                }\n            }.bind(this));\n\n            this.player.on('cuepoint', function(event) {\n                if (event.data.starttime) {\n                    $(tabs).find('.videotime-highlight').removeClass('videotime-highlight');\n                    $(tabs).find('[data-action=\"cue\"][data-start=\"' + event.data.starttime + '\"]')\n                        .closest('.row')\n                        .addClass('videotime-highlight');\n                    $('.videotime-highlight').each(function() {\n                        if (this.offsetTop) {\n                            this.parentNode.scrollTo({\n                                top: this.offsetTop - 50,\n                                left: 0,\n                                behavior: 'smooth'\n                            });\n                        }\n                    });\n                }\n            });\n        }.bind(this));\n\n        // Readjust height when responsive player is resized.\n        if (this.player.options().responsive) {\n            let observer = new ResizeObserver(() => {\n                this.player.height(this.player.videoHeight() / this.player.videoWidth() * this.player.currentWidth());\n            });\n            observer.observe(document.querySelector('#' + this.elementId));\n        }\n    }\n\n    /**\n     * Parse start time and set player\n     *\n     * @param {string} starttime\n     * @returns {Promise}\n     */\n    setStartTime(starttime) {\n        let time = starttime.match(/((([0-9]+):)?(([0-9]+):))?([0-9]+(\\.[0-9]+))/);\n        if (time) {\n            this.resumeTime = 3600 * Number(time[3] || 0) + 60 * Number(time[5] || 0) + Number(time[6]);\n            return this.player.currentTime(this.resumeTime);\n        }\n        Log.debug('Set start time:' + starttime);\n        return this.player.currentTime();\n    }\n\n    /**\n     * Get play back rate\n     *\n     * @returns {Promise}\n     */\n    getDuration() {\n        return new Promise((resolve) => {\n            resolve(this.player.duration());\n            return true;\n        });\n    }\n\n    /**\n     * Get duration of video\n     *\n     * @returns {Promise}\n     */\n    getPlaybackRate() {\n        return new Promise((resolve) => {\n            resolve(this.player.playbackRate());\n            return true;\n        });\n    }\n\n    /**\n     * Set current time of player\n     *\n     * @param {float} secs time\n     * @returns {Promise}\n     */\n    setCurrentPosition(secs) {\n        return new Promise((resolve) => {\n            resolve(this.player.currentTime(secs));\n            return true;\n        });\n    }\n\n    /**\n     * Get current time of player\n     *\n     * @returns {Promise}\n     */\n    getCurrentPosition() {\n        return new Promise((resolve) => {\n            resolve(this.player.currentTime());\n            return true;\n        });\n    }\n}\n"],"names":["VideoTime","VideoTimeBase","initialize","debug","this","elementId","getInstance","then","instance","options","autoplay","controls","responsive","playbackRates","speed","muted","height","width","player","Player","url","URL","window","location","href","q","searchParams","get","starttime","match","setStartTime","find","catch","Notification","exception","addListeners","i","plugins","length","exeption","on","played","hasPro","getSession","view","startWatchInterval","getResumeTime","seconds","duration","getPlayer","resumeTime","Math","floor","currentTime","playing","bind","playbackRate","percent","Promise","resolve","session","setSessionState","id","setPercent","setCurrentTime","finally","getNextActivityButtonData","response","data","JSON","parse","parseInt","next_activity_auto","is_restricted","hasnextcm","link","nextcm_url","first","click","render","html","fail","closest","each","tabs","index","anchor","getAttribute","time","addCuePoint","Number","exeception","event","removeClass","addClass","offsetTop","parentNode","scrollTo","top","left","behavior","ResizeObserver","videoHeight","videoWidth","currentWidth","observe","document","querySelector","cmId","getDuration","getPlaybackRate","setCurrentPosition","secs","getCurrentPosition"],"mappings":"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"}