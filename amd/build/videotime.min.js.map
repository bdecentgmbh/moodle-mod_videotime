{"version":3,"file":"videotime.min.js","sources":["../src/videotime.js"],"sourcesContent":["/*\n * @package    mod_videotime\n * @copyright  2021 bdecent gmbh <https://bdecent.de>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * @module mod_videotime/videotime\n */\ndefine([\n    'jquery',\n    'mod_videotime/player',\n    'core/ajax',\n    'core/config',\n    'core/log',\n    'core/templates',\n    'core/notification'\n], function($, Vimeo, Ajax, Config, Log, Templates, Notification) {\n    let VideoTime = function(elementId, cmId, hasPro, interval, instance) {\n        this.elementId = elementId;\n        this.cmId = cmId;\n        this.hasPro = hasPro;\n        this.interval = interval;\n        this.player = null;\n        this.resumeTime = null;\n        this.session = null;\n        this.instance = instance;\n\n        this.played = false;\n\n        this.playing = false;\n        this.time = 0;\n        this.percent = 0;\n        this.currentTime = 0;\n        this.playbackRate = 1;\n\n        this.plugins = [];\n\n        if (hasPro && $('body').hasClass('path-course-view') && !$('body').hasClass('vtinit')) {\n            $('body').addClass('vtinit');\n            $(document).on('focus', 'body', this.initializeNewInstances.bind(this));\n        }\n        this.modulecount = $('body .activity.videotime').length;\n    };\n\n    /**\n     * Get course module ID of this VideoTime instance.\n     *\n     * @return {int}\n     */\n    VideoTime.prototype.getCmId = function() {\n        return this.cmId;\n    };\n\n    /**\n     * Register a plugin to hook into VideoTime functionality.\n     *\n     * @param {VideoTimePlugin} plugin\n     */\n    VideoTime.prototype.registerPlugin = function(plugin) {\n        this.plugins.push(plugin);\n    };\n\n    VideoTime.prototype.initialize = function() {\n        let instance = this.instance;\n        Log.debug('Initializing Video Time ' + this.elementId);\n\n            Log.debug('Initializing Vimeo player with options:');\n            Log.debug(instance);\n            this.player = new Vimeo(this.elementId, {\n                autopause: Number(instance.autopause),\n                autoplay: Number(instance.autoplay),\n                background: Number(instance.background),\n                byline: Number(instance.byline),\n                color: instance.color,\n                controls: Number(instance.controls),\n                dnt: Number(instance.dnt),\n                height: instance.height,\n                loop: Number(instance.option_loop),\n                maxheight: instance.maxheight,\n                maxwidth: instance.maxwidth,\n                muted: Number(instance.muted),\n                portrait: instance.portrait,\n                pip: Number(instance.pip),\n                playsinline: instance.playsinline,\n                responsive: Number(instance.responsive),\n                speed: instance.speed,\n                title: Number(instance.title),\n                transparent: Number(instance.transparent),\n                url: instance.vimeo_url,\n                width: instance.width\n            });\n\n            let url = new URL(window.location.href),\n                q = url.searchParams.get('q'),\n                starttime = (url.searchParams.get('time') || '').match(/^([0-9]+:){0,2}([0-9]+)(\\.[0-9]+)$/);\n            if (starttime) {\n                this.setStartTime(starttime[0]).then(function() {\n                    if (q && window.find) {\n                        window.find(q);\n                    }\n                    return true;\n                }).catch(Notification.exception);\n            } else if (q && window.find) {\n                window.find(q);\n            }\n\n            this.addListeners();\n\n            for (let i = 0; i < this.plugins.length; i++) {\n                const plugin = this.plugins[i];\n                plugin.initialize(this, instance);\n            }\n\n            return true;\n    };\n\n    /**\n     * Get Vimeo player object.\n     *\n     * @returns {Vimeo}\n     */\n    VideoTime.prototype.getPlayer = function() {\n        return this.player;\n    };\n\n    /**\n     * Register player events to respond to user interaction and play progress.\n     */\n    VideoTime.prototype.addListeners = function() {\n        if (!this.player) {\n            Log.debug('Player was not properly initialized for course module ' + this.cmId);\n            return;\n        }\n\n        // If this is a tab play set time cues and listener.\n        $($('#' + this.elementId).closest('.videotimetabs')).each(function(i, tabs) {\n           $(tabs).find('[data-action=\"cue\"]').each(function(index, anchor) {\n                let starttime = anchor.getAttribute('data-start'),\n                    time = starttime.match(/((([0-9]+):)?(([0-9]+):))?([0-9]+(\\.[0-9]+))/);\n                if (time) {\n                    this.player.addCuePoint(\n                        3600 * Number(time[3] || 0) + 60 * Number(time[5] || 0) + Number(time[6]),\n                        {\n                            starttime: starttime\n                        }\n                    ).catch(Notification.exeception);\n                }\n            }.bind(this));\n\n            this.player.on('cuepoint', function(event) {\n                if (event.data.starttime) {\n                    $(tabs).find('.videotime-highlight').removeClass('videotime-highlight');\n                    $(tabs).find('[data-action=\"cue\"][data-start=\"' + event.data.starttime + '\"]')\n                        .closest('.row')\n                        .addClass('videotime-highlight');\n                    $('.videotime-highlight').each(function() {\n                        if (this.offsetTop) {\n                            this.parentNode.scrollTo({\n                                top: this.offsetTop - 50,\n                                left: 0,\n                                behavior: 'smooth'\n                            });\n                        }\n                    });\n                }\n            });\n        }.bind(this));\n\n        // Fire view event in Moodle on first play only.\n        this.player.on('play', () => {\n            if (this.hasPro) {\n                this.startWatchInterval();\n            }\n            this.view();\n            return true;\n        });\n\n        // Features beyond this point are for pro only.\n        if (!this.hasPro) {\n            return;\n        }\n\n        // If resume is present force seek the player to that point.\n        this.player.on(\"loaded\", () => {\n            if (!this.instance.resume_playback || !this.instance.resume_time || this.instance.resume_time <= 0) {\n                return true;\n            }\n\n            return this.getDuration().then((duration) => {\n                let resumeTime = this.instance.resume_time;\n                // Duration is often a little greater than a resume time at the end of the video.\n                // A user may have watched 100 seconds when the video ends, but the duration may be\n                // 100.56 seconds. BUT, sometimes the duration is rounded depending on when the\n                // video loads, so it may be 101 seconds. Hence the +1 and Math.floor usage.\n                if (resumeTime + 1 >= Math.floor(duration)) {\n                    Log.debug(\n                        \"VIDEO_TIME video finished, resuming at start of video.\"\n                    );\n                    resumeTime = 0;\n                }\n                Log.debug(\"VIDEO_TIME duration is \" + duration);\n                Log.debug(\"VIDEO_TIME resuming at \" + resumeTime);\n                this.setCurrentPosition(resumeTime);\n                return true;\n            }).fail(Notification.exception);\n        });\n\n        // Note: Vimeo player does not support multiple events in a single on() call. Each requires it's own function.\n\n        // Catch all events where video plays.\n        this.player.on('play', function() {\n            this.playing = true;\n            Log.debug('VIDEO_TIME play');\n        }.bind(this));\n        this.player.on('playing', function() {\n            this.playing = true;\n            Log.debug('VIDEO_TIME playing');\n        }.bind(this));\n\n        // Catch all events where video stops.\n        this.player.on('pause', function() {\n            this.playing = false;\n            Log.debug('VIDEO_TIME pause');\n        }.bind(this));\n        this.player.on('stalled', function() {\n            this.playing = false;\n            Log.debug('VIDEO_TIME stalled');\n        }.bind(this));\n        this.player.on('suspend', function() {\n            this.playing = false;\n            Log.debug('VIDEO_TIME suspend');\n        }.bind(this));\n        this.player.on('abort', function() {\n            this.playing = false;\n            Log.debug('VIDEO_TIME abort');\n        }.bind(this));\n\n        this.player.getPlaybackRate().then(function(playbackRate) {\n            this.playbackRate = playbackRate;\n        }.bind(this)).catch(Notification.exception);\n\n        this.player.on('playbackratechange', function(event) {\n            this.playbackRate = event.playbackRate;\n        }.bind(this));\n\n        // Always update internal values for percent and current time watched.\n        this.player.on('timeupdate', function(event) {\n            this.percent = event.percent;\n            this.currentTime = event.seconds;\n            if (event.seconds === event.duration) {\n                this.plugins.forEach(plugin => {\n                    if (typeof plugin.setCurrentTime == 'function') {\n                        plugin.getSessions().then(session => {\n                            plugin.setCurrentTime(session.id, event.seconds);\n                        });\n                    }\n                });\n            }\n        }.bind(this));\n\n        // Initiate video finish procedure.\n        this.player.on('ended', this.handleEnd.bind(this));\n    };\n\n    /**\n     * Start interval that will periodically record user progress via Ajax.\n     */\n    VideoTime.prototype.handleEnd = function() {\n        this.playing = false;\n        Log.debug('VIDEO_TIME ended');\n        if (this.plugins.length > 2) {\n            this.plugins.forEach(plugin => {\n                if (typeof plugin.handleEnd == 'function') {\n                    plugin.handleEnd();\n                }\n            });\n        } else {\n            // This moved to pro plugin, but left for compatibility.\n            this.getSession().then(function(session) {\n                this.setSessionState(session.id, 1).then(() => {\n                    return this.setPercent(session.id, 1);\n                }).then(() => {\n                    return this.setCurrentTime(session.id, this.currentTime);\n                }).then(() => {\n                    return this.getNextActivityButtonData(session.id).then(response => {\n                        let data = JSON.parse(response.data);\n\n                        if (data.instance && parseInt(data.instance.next_activity_auto)) {\n                            if (!data.is_restricted && data.hasnextcm) {\n                                let link = $('.aalink[href=\"' + data.nextcm_url + '\"] img').first();\n                                if ($('.path-course-view').length && link) {\n                                    link.click();\n                                } else {\n                                    window.location.href = data.nextcm_url;\n                                }\n                            }\n                        }\n\n                        return Templates.render('videotime/next_activity_button', JSON.parse(response.data))\n                            .then(function(html) {\n                                $('#next-activity-button').html(html);\n                                return true;\n                            });\n                    });\n                }).catch(Notification.exception);\n            }.bind(this)).catch(Notification.exception);\n        }\n    };\n\n    /**\n     * Start interval that will periodically record user progress via Ajax.\n     */\n    VideoTime.prototype.startWatchInterval = function() {\n        this.plugins.forEach(plugin => {\n            if (typeof plugin.startWatchInterval == 'function') {\n                this.watchInterval = true;\n                plugin.startWatchInterval();\n            }\n        });\n        if (this.watchInterval) {\n            return;\n        }\n\n        this.watchInterval = setInterval(function() {\n            if (this.playing) {\n                this.time += this.playbackRate;\n\n                this.getSession().then(function(session) {\n                    if (this.time % this.interval === 0) {\n                        Log.debug('VIDEO_TIME watch_time: ' + this.time + '. percent: ' + this.percent);\n                        this.recordWatchTime(session.id, this.time);\n                        this.setPercent(session.id, this.percent);\n                        this.setCurrentTime(session.id, this.currentTime);\n                    }\n                    return true;\n                }.bind(this)).catch(Notification.exception);\n            }\n        }.bind(this), 1000);\n    };\n\n    /**\n     * Set state on session.\n     *\n     * @param {int} sessionId\n     * @param {int} state\n     * @returns {Promise}\n     */\n    VideoTime.prototype.setSessionState = function(sessionId, state) {\n        if (this.instance.token) {\n            const url = new URL(Config.wwwroot + '/webservice/rest/server.php'),\n                data = url.searchParams;\n            data.set('wstoken', this.instance.token);\n            data.set('moodlewsrestformat', 'json');\n            data.set('wsfunction', 'videotimeplugin_pro_set_session_state');\n            data.set('state', state);\n            data.set('session_id', sessionId);\n            return fetch(url).then((response) => {\n                if (!response.ok) {\n                    Notification.exeption('Web service error');\n                }\n                return response.json();\n            });\n        }\n\n        return Ajax.call([{\n            methodname: 'videotimeplugin_pro_set_session_state',\n            args: {\"session_id\": sessionId, state: state},\n            fail: Notification.exception\n        }])[0];\n    };\n\n    /**\n     * Set current watch time for video. Used for resuming.\n     *\n     * @param {int} sessionId\n     * @param {float} currentTime\n     * @returns {Promise}\n     */\n    VideoTime.prototype.setCurrentTime = function(sessionId, currentTime) {\n        if (this.instance.token) {\n            const url = new URL(Config.wwwroot + '/webservice/rest/server.php'),\n                data = url.searchParams;\n            data.set('wstoken', this.instance.token);\n            data.set('moodlewsrestformat', 'json');\n            data.set('wsfunction', 'videotimeplugin_pro_set_session_current_time');\n            data.set('current_time', currentTime);\n            data.set('session_id', sessionId);\n            return fetch(url).then((response) => {\n                if (!response.ok) {\n                    Notification.exeption('Web service error');\n                }\n                return response.json();\n            });\n        }\n        return Ajax.call([{\n            methodname: 'videotimeplugin_pro_set_session_current_time',\n            args: {\"session_id\": sessionId, \"current_time\": currentTime},\n            fail: Notification.exception\n        }])[0];\n    };\n\n    /**\n     * Set video watch percentage for session.\n     *\n     * @param {int} sessionId\n     * @param {float} percent\n     * @returns {Promise}\n     */\n    VideoTime.prototype.setPercent = function(sessionId, percent) {\n        if (this.instance.token) {\n            const url = new URL(Config.wwwroot + '/webservice/rest/server.php'),\n                data = url.searchParams;\n            data.set('wstoken', this.instance.token);\n            data.set('moodlewsrestformat', 'json');\n            data.set('wsfunction', 'videotimeplugin_pro_set_percent');\n            data.set('percent', percent);\n            data.set('session_id', sessionId);\n            return fetch(url).then((response) => {\n                if (!response.ok) {\n                    Notification.exeption('Web service error');\n                }\n                return response.json();\n            });\n        }\n        return Ajax.call([{\n            methodname: 'videotimeplugin_pro_set_percent',\n            args: {\"session_id\": sessionId, percent: percent},\n            fail: Notification.exception\n        }])[0];\n    };\n\n    /**\n     * Record watch time for session.\n     *\n     * @param {int} sessionId\n     * @param {float} time\n     * @returns {Promise}\n     */\n    VideoTime.prototype.recordWatchTime = function(sessionId, time) {\n        if (this.instance.token) {\n            const url = new URL(Config.wwwroot + '/webservice/rest/server.php'),\n                data = url.searchParams;\n            data.set('wstoken', this.instance.token);\n            data.set('moodlewsrestformat', 'json');\n            data.set('wsfunction', 'videotimeplugin_pro_record_watch_time');\n            data.set('session_id', sessionId);\n            data.set('time', time);\n            return fetch(url).then((response) => {\n                if (!response.ok) {\n                    Notification.exeption('Web service error');\n                }\n                return response.json();\n            });\n        }\n        return Ajax.call([{\n            methodname: 'videotimeplugin_pro_record_watch_time',\n            args: {\"session_id\": sessionId, time: time},\n            fail: Notification.exception\n        }])[0];\n    };\n\n    /**\n     * Get data for next activity button.\n     *\n     * @param {int} sessionId\n     * @returns {Promise}\n     */\n    VideoTime.prototype.getNextActivityButtonData = function(sessionId) {\n        if (this.instance.token) {\n            // We do not support button in iframe.\n            return Promise.resolve({data: '{}'});\n        }\n        return Ajax.call([{\n            methodname: 'videotimeplugin_pro_get_next_activity_button_data',\n            args: {\"session_id\": sessionId}\n        }])[0];\n    };\n\n    /**\n     * Get VideoTime instance for this course module.\n     *\n     * @returns {Promise}\n     */\n    VideoTime.prototype.getInstance = function() {\n        if (this.instance) {\n            return Promise.resolve(this.instance);\n        }\n\n        return Ajax.call([{\n            methodname: 'mod_videotime_get_videotime',\n            args: {cmid: this.cmId},\n            done: (response) => {\n                this.instance = response;\n                return this.instance;\n            },\n            fail: Notification.exception\n        }])[0];\n    };\n\n    /**\n     * Get time to resume video as seconds.\n     *\n     * @returns {Promise}\n     */\n    VideoTime.prototype.getResumeTime = function() {\n        if (this.resumeTime) {\n            return Promise.resolve(this.resumeTime);\n        }\n\n        return Ajax.call([{\n            methodname: 'videotimeplugin_pro_get_resume_time',\n            args: {cmid: this.cmId},\n            done: (response) => {\n                this.resumeTime = response.seconds;\n                return this.resumeTime;\n            },\n            fail: Notification.exception\n        }])[0];\n    };\n\n    /**\n     * Get new or existing video viewing session.\n     *\n     * @returns {Promise}\n     */\n    VideoTime.prototype.getSession = function() {\n        if (this.instance.token) {\n            if (!this.session) {\n                const url = new URL(Config.wwwroot + '/webservice/rest/server.php'),\n                    data = url.searchParams;\n                data.set('wstoken', this.instance.token);\n                data.set('moodlewsrestformat', 'json');\n                data.set('wsfunction', 'videotimeplugin_pro_get_new_session');\n                data.set('cmid', this.cmId);\n                this.session = fetch(url).then((response) => {\n                    if (!response.ok) {\n                        Notification.exeption('Web service error');\n                    }\n                    return response.json();\n                });\n            }\n\n            return this.session;\n        }\n        if (!this.session) {\n            this.session = Ajax.call([{\n                methodname: 'videotimeplugin_pro_get_new_session',\n                args: {cmid: this.cmId},\n                fail: Notification.exception\n            }])[0];\n        }\n        return this.session;\n    };\n\n    /**\n     * Parse start time and set player\n     *\n     * @param {string} starttime\n     * @returns {Promise}\n     */\n    VideoTime.prototype.setStartTime = function(starttime) {\n        let time = starttime.match(/((([0-9]+):)?(([0-9]+):))?([0-9]+(\\.[0-9]+))/);\n        if (time) {\n            this.resumeTime = 3600 * Number(time[3] || 0) + 60 * Number(time[5] || 0) + Number(time[6]);\n            this.currentTime(this.resumeTime);\n        }\n        return this.player.getCurrentTime();\n    };\n\n    /**\n     * Log the user view of video.\n     *\n     * @returns {Promise}\n     */\n    VideoTime.prototype.view = function() {\n        if (this.instance.token) {\n            const url = new URL(Config.wwwroot + '/webservice/rest/server.php'),\n                data = url.searchParams;\n            data.set('wstoken', this.instance.token);\n            data.set('moodlewsrestformat', 'json');\n            data.set('wsfunction', 'mod_videotime_view_videotime');\n            data.set('cmid', this.cmId);\n            return fetch(url).then((response) => {\n                if (!response.ok) {\n                    Notification.exeption('Web service error');\n                }\n                return response.json();\n            });\n\n        }\n        return Ajax.call([{\n            methodname: 'mod_videotime_view_videotime',\n            args: {cmid: this.cmId},\n            fail: Notification.exception\n        }])[0];\n    };\n\n    /**\n     * Initialize new labels and preview when editing\n     */\n    VideoTime.prototype.initializeNewInstances = function() {\n        if (this.modulecount == $('body .activity.videotime').length) {\n            return;\n        }\n        this.modulecount = $('body .activity.videotime').length;\n        $('body .activity.videotime').each(function(index, module) {\n            if (\n                !$(module).find('.instancename').length\n                && $(module).find('.vimeo-embed').length\n                && !$(module).find('.vimeo-embed iframe').length\n            ) {\n                let instance = {\n                    cmid: Number($(module).attr('id').replace('module-', '')),\n                    haspro: true,\n                    interval: this.interval,\n                    uniqueid: $(module).find('.vimeo-embed').first().attr('id').replace('vimeo-embed-', '')\n                };\n                Templates.render('mod_videotime/videotime_instance', {\n                    instance: instance\n                }).then(function(html, js) {\n                    Templates.runTemplateJS(js);\n                    return true;\n                }).fail(Notification.exception);\n            }\n        }.bind(this));\n    };\n\n    /**\n     * Get play back rate\n     *\n     * @returns {Promise}\n     */\n    VideoTime.prototype.getPlaybackRate = function() {\n        return this.player.getPlaybackRate();\n    };\n\n    /**\n     * Get duration of video\n     *\n     * @returns {Promise}\n     */\n    VideoTime.prototype.getDuration = function() {\n        return this.player.getDuration();\n    };\n\n    /**\n     * Set current time of player\n     *\n     * @param {float} secs time\n     * @returns {Promise}\n     */\n    VideoTime.prototype.setCurrentPosition = function(secs) {\n        return this.player.setCurrentTime(secs);\n    };\n\n    /**\n     * Get current time of player\n     *\n     * @returns {Promise}\n     */\n    VideoTime.prototype.getCurrentPosition = function() {\n        return this.player.getCurrentTime();\n    };\n\n    return VideoTime;\n});\n"],"names":["define","$","Vimeo","Ajax","Config","Log","Templates","Notification","VideoTime","elementId","cmId","hasPro","interval","instance","player","resumeTime","session","played","playing","time","percent","currentTime","playbackRate","plugins","hasClass","addClass","document","on","this","initializeNewInstances","bind","modulecount","length","prototype","getCmId","registerPlugin","plugin","push","initialize","debug","autopause","Number","autoplay","background","byline","color","controls","dnt","height","loop","option_loop","maxheight","maxwidth","muted","portrait","pip","playsinline","responsive","speed","title","transparent","url","vimeo_url","width","URL","window","location","href","q","searchParams","get","starttime","match","setStartTime","then","find","catch","exception","addListeners","i","getPlayer","closest","each","tabs","index","anchor","getAttribute","addCuePoint","exeception","event","data","removeClass","offsetTop","parentNode","scrollTo","top","left","behavior","startWatchInterval","view","resume_playback","resume_time","getDuration","duration","Math","floor","setCurrentPosition","fail","getPlaybackRate","seconds","forEach","setCurrentTime","getSessions","id","handleEnd","getSession","setSessionState","setPercent","getNextActivityButtonData","response","JSON","parse","parseInt","next_activity_auto","is_restricted","hasnextcm","link","nextcm_url","first","click","render","html","watchInterval","setInterval","recordWatchTime","sessionId","state","token","wwwroot","set","fetch","ok","exeption","json","call","methodname","args","Promise","resolve","getInstance","cmid","done","getResumeTime","getCurrentTime","module","attr","replace","haspro","uniqueid","js","runTemplateJS","secs","getCurrentPosition"],"mappings":"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"}