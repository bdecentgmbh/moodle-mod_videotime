{"version":3,"file":"videotime.min.js","sources":["../src/videotime.js"],"sourcesContent":["/*\n * @package    mod_videotime\n * @copyright  2021 bdecent gmbh <https://bdecent.de>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * @module mod_videotime/videotime\n */\ndefine([\n    'jquery',\n    'mod_videotime/player',\n    'core/ajax',\n    'core/config',\n    'core/log',\n    'core/templates',\n    'core/notification'\n], function($, Vimeo, Ajax, Config, Log, Templates, Notification) {\n    let VideoTime = function(elementId, cmId, hasPro, interval, instance) {\n        this.elementId = elementId;\n        this.cmId = cmId;\n        this.hasPro = hasPro;\n        this.interval = interval;\n        this.player = null;\n        this.resumeTime = null;\n        this.session = null;\n        this.instance = instance;\n\n        this.played = false;\n\n        this.playing = false;\n        this.time = 0;\n        this.percent = 0;\n        this.currentTime = 0;\n        this.playbackRate = 1;\n\n        this.plugins = [];\n\n        if (hasPro && $('body').hasClass('path-course-view') && !$('body').hasClass('vtinit')) {\n            $('body').addClass('vtinit');\n        }\n        this.modulecount = $('body .activity.videotime').length;\n    };\n\n    /**\n     * Get course module ID of this VideoTime instance.\n     *\n     * @return {int}\n     */\n    VideoTime.prototype.getCmId = function() {\n        return this.cmId;\n    };\n\n    /**\n     * Register a plugin to hook into VideoTime functionality.\n     *\n     * @param {VideoTimePlugin} plugin\n     */\n    VideoTime.prototype.registerPlugin = function(plugin) {\n        this.plugins.push(plugin);\n    };\n\n    VideoTime.prototype.initialize = function() {\n        let instance = this.instance;\n        Log.debug('Initializing Video Time ' + this.elementId);\n\n        Log.debug('Initializing Vimeo player with options:');\n        Log.debug(instance);\n        this.player = new Vimeo(this.elementId, {\n            autopause: Number(instance.autopause),\n            autoplay: Number(instance.autoplay),\n            background: Number(instance.background),\n            byline: Number(instance.byline),\n            color: instance.color,\n            controls: Number(instance.controls),\n            dnt: Number(instance.dnt),\n            height: instance.height,\n            loop: Number(instance.option_loop),\n            maxheight: instance.maxheight,\n            maxwidth: instance.maxwidth,\n            muted: Number(instance.muted),\n            portrait: instance.portrait,\n            pip: Number(instance.pip),\n            playsinline: instance.playsinline,\n            responsive: Number(instance.responsive),\n            speed: instance.speed,\n            title: Number(instance.title),\n            transparent: Number(instance.transparent),\n            url: instance.vimeo_url,\n            width: instance.width\n        });\n\n        this.handleStartTime();\n\n        this.addListeners();\n\n        for (let i = 0; i < this.plugins.length; i++) {\n            const plugin = this.plugins[i];\n            plugin.initialize(this, instance);\n        }\n\n        return true;\n    };\n\n    VideoTime.prototype.handleStartTime = async function() {\n        const url = new URL(window.location.href),\n            q = url.searchParams.get('q'),\n            starttime = (url.searchParams.get('time') || '').match(/^([0-9]+:){0,2}([0-9]+)(\\.[0-9]+)$/);\n        if (starttime) {\n            await this.setStartTime(starttime[0]);\n        }\n        if (q && window.find) {\n            window.find(q);\n        }\n    };\n\n    /**\n     * Get pause state\n     *\n     * @return {bool}\n     */\n    VideoTime.prototype.getPaused = async function() {\n        return await this.player.getPaused();\n    };\n\n    /**\n     * Get Vimeo player object.\n     *\n     * @returns {Vimeo}\n     */\n    VideoTime.prototype.getPlayer = function() {\n        return this.player;\n    };\n\n    /**\n     * Register player events to respond to user interaction and play progress.\n     */\n    VideoTime.prototype.addListeners = async function() {\n        if (!this.player) {\n            Log.debug('Player was not properly initialized for course module ' + this.cmId);\n            return;\n        }\n\n        // If this is a tab play set time cues and listener.\n        $($('#' + this.elementId).closest('.videotimetabs')).each(function(i, tabs) {\n           $(tabs).find('[data-action=\"cue\"]').each(async function(index, anchor) {\n                let starttime = anchor.getAttribute('data-start'),\n                    time = starttime.match(/((([0-9]+):)?(([0-9]+):))?([0-9]+(\\.[0-9]+))/);\n                if (time) {\n                    await this.player.addCuePoint(\n                        3600 * Number(time[3] || 0) + 60 * Number(time[5] || 0) + Number(time[6]),\n                        {\n                            starttime: starttime\n                        }\n                    );\n                }\n            }.bind(this));\n\n            this.player.on('cuepoint', function(event) {\n                if (event.data.starttime) {\n                    $(tabs).find('.videotime-highlight').removeClass('videotime-highlight');\n                    $(tabs).find('[data-action=\"cue\"][data-start=\"' + event.data.starttime + '\"]')\n                        .closest('.row')\n                        .addClass('videotime-highlight');\n                    $('.videotime-highlight').each(function() {\n                        if (this.offsetTop) {\n                            this.parentNode.scrollTo({\n                                top: this.offsetTop - 50,\n                                left: 0,\n                                behavior: 'smooth'\n                            });\n                        }\n                    });\n                }\n            });\n        }.bind(this));\n\n        // Fire view event in Moodle on first play only.\n        this.player.on('play', () => {\n            if (this.hasPro) {\n                this.startWatchInterval();\n            }\n            this.view();\n            return true;\n        });\n\n        // Features beyond this point are for pro only.\n        if (!this.hasPro) {\n            return;\n        }\n\n        // If resume is present force seek the player to that point.\n        this.player.on(\"loaded\", () => {\n            if (!this.instance.resume_playback || !this.instance.resume_time || this.instance.resume_time <= 0) {\n                return;\n            }\n\n            this.resume();\n        });\n\n        // Note: Vimeo player does not support multiple events in a single on() call. Each requires it's own function.\n\n        // Catch all events where video plays.\n        this.player.on('play', function() {\n            this.playing = true;\n            Log.debug('VIDEO_TIME play');\n        }.bind(this));\n        this.player.on('playing', function() {\n            this.playing = true;\n            Log.debug('VIDEO_TIME playing');\n        }.bind(this));\n\n        // Catch all events where video stops.\n        this.player.on('pause', function() {\n            this.playing = false;\n            Log.debug('VIDEO_TIME pause');\n        }.bind(this));\n        this.player.on('stalled', function() {\n            this.playing = false;\n            Log.debug('VIDEO_TIME stalled');\n        }.bind(this));\n        this.player.on('suspend', function() {\n            this.playing = false;\n            Log.debug('VIDEO_TIME suspend');\n        }.bind(this));\n        this.player.on('abort', function() {\n            this.playing = false;\n            Log.debug('VIDEO_TIME abort');\n        }.bind(this));\n\n        this.playbackRate = await this.getPlaybackRate();\n\n        this.player.on('playbackratechange', function(event) {\n            this.playbackRate = event.playbackRate;\n        }.bind(this));\n\n        // Always update internal values for percent and current time watched.\n        this.player.on('timeupdate', function(event) {\n            setTimeout(async() => {\n                var preventUpdate = false;\n                if (event.seconds === event.duration) {\n                    this.plugins.forEach(async(plugin) => {\n                        if (typeof plugin.setCurrentTime == 'function') {\n                            const session = plugin.getSession();\n                            plugin.setCurrentTime(session.id, event.seconds);\n                        }\n                    });\n                }\n                if (Number(this.instance.preventfastforwarding)) {\n                    const playbackRate = await this.getPlaybackRate();\n                    this.plugins.forEach((plugin) => {\n                        if (\n                                (typeof plugin.watchTime != 'undefined')\n                                && (event.seconds > plugin.watchTime + plugin.fastForwardBuffer * playbackRate)\n                        ) {\n                            preventUpdate = true;\n                        }\n                    });\n                }\n                if (preventUpdate) {\n                    return;\n                }\n                this.percent = event.percent;\n                this.currentTime = event.seconds;\n            }, 100);\n        }.bind(this));\n\n        // Initiate video finish procedure.\n        this.player.on('ended', this.handleEnd.bind(this));\n        this.player.on('pause', this.handlePause.bind(this));\n    };\n\n    VideoTime.prototype.resume = async function() {\n        const duration = await this.getDuration();\n        let resumeTime = this.instance.resume_time;\n        // Duration is often a little greater than a resume time at the end of the video.\n        // A user may have watched 100 seconds when the video ends, but the duration may be\n        // 100.56 seconds. BUT, sometimes the duration is rounded depending on when the\n        // video loads, so it may be 101 seconds. Hence the +1 and Math.floor usage.\n        if (resumeTime + 1 >= Math.floor(duration)) {\n            Log.debug(\n                \"VIDEO_TIME video finished, resuming at start of video.\"\n            );\n            resumeTime = 0;\n        }\n        Log.debug(\"VIDEO_TIME duration is \" + duration);\n        Log.debug(\"VIDEO_TIME resuming at \" + resumeTime);\n        await this.setCurrentPosition(resumeTime);\n        return true;\n    };\n\n    /**\n     * Handle pause\n     */\n    VideoTime.prototype.handlePause = function() {\n        this.plugins.forEach(plugin => {\n            if (typeof plugin.handlePause == 'function') {\n                plugin.handlePause();\n            }\n        });\n    };\n\n    /**\n     * Start interval that will periodically record user progress via Ajax.\n     */\n    VideoTime.prototype.handleEnd = async function() {\n        this.playing = false;\n        Log.debug('VIDEO_TIME ended');\n        if (this.plugins.length > 2) {\n            this.plugins.forEach(plugin => {\n                if (typeof plugin.handleEnd == 'function') {\n                    plugin.handleEnd();\n                }\n            });\n        } else {\n            // This moved to pro plugin, but left for compatibility.\n            const session = await this.getSession();\n            await this.setSessionState(session.id, 1);\n            await this.setPercent(session.id, 1);\n            await this.setCurrentTime(session.id, this.currentTime);\n            const response = await this.getNextActivityButtonData(session.id);\n            const data = JSON.parse(response.data);\n            if (data.instance && parseInt(data.instance.next_activity_auto)) {\n                if (!data.is_restricted && data.hasnextcm) {\n                    let link = $('.aalink[href=\"' + data.nextcm_url + '\"] img').first();\n                    if ($('.path-course-view').length && link) {\n                        link.click();\n                    } else {\n                        window.location.href = data.nextcm_url;\n                    }\n                }\n            }\n\n            const html = await Templates.render('videotime/next_activity_button', JSON.parse(response.data));\n            $('#next-activity-button').html(html);\n        }\n    };\n\n    /**\n     * Start interval that will periodically record user progress via Ajax.\n     */\n    VideoTime.prototype.startWatchInterval = function() {\n        this.plugins.forEach(plugin => {\n            if (typeof plugin.startWatchInterval == 'function') {\n                this.watchInterval = true;\n                plugin.startWatchInterval();\n            }\n        });\n        if (this.watchInterval) {\n            return;\n        }\n\n        this.watchInterval = setInterval(async function() {\n            if (!this.getPaused()) {\n                this.time += this.playbackRate;\n            }\n        }.bind(this), 1000);\n\n        this.watchInterval = setInterval(async function() {\n            const session = await this.getSession();\n            Log.debug('VIDEO_TIME watch_time: ' + this.time + '. percent: ' + this.percent);\n            this.recordWatchTime(session.id, this.time);\n            this.setPercent(session.id, this.percent);\n            this.setCurrentTime(session.id, this.currentTime);\n        }.bind(this), this.interval);\n    };\n\n    /**\n     * Set state on session.\n     *\n     * @param {int} sessionId\n     * @param {int} state\n     * @returns {Promise}\n     */\n    VideoTime.prototype.setSessionState = async function(sessionId, state) {\n        if (this.instance.token) {\n            const url = new URL(Config.wwwroot + '/webservice/rest/server.php'),\n                data = url.searchParams;\n            data.set('wstoken', this.instance.token);\n            data.set('moodlewsrestformat', 'json');\n            data.set('wsfunction', 'videotimeplugin_pro_set_session_state');\n            data.set('state', state);\n            data.set('session_id', sessionId);\n            const response = await fetch(url);\n            if (!response.ok) {\n                Notification.exeption('Web service error');\n            }\n            return await response.json();\n        }\n\n        return await Ajax.call([{\n            methodname: 'videotimeplugin_pro_set_session_state',\n            args: {\"session_id\": sessionId, state: state},\n            fail: Notification.exception\n        }])[0];\n    };\n\n    /**\n     * Set current watch time for video. Used for resuming.\n     *\n     * @param {int} sessionId\n     * @param {float} currentTime\n     * @returns {Promise}\n     */\n    VideoTime.prototype.setCurrentTime = async function(sessionId, currentTime) {\n        if (this.instance.token) {\n            const url = new URL(Config.wwwroot + '/webservice/rest/server.php'),\n                data = url.searchParams;\n            data.set('wstoken', this.instance.token);\n            data.set('moodlewsrestformat', 'json');\n            data.set('wsfunction', 'videotimeplugin_pro_set_session_current_time');\n            data.set('current_time', currentTime);\n            data.set('session_id', sessionId);\n            const response = await fetch(url);\n            if (!response.ok) {\n                Notification.exeption('Web service error');\n            }\n            return await response.json();\n        }\n        return await Ajax.call([{\n            methodname: 'videotimeplugin_pro_set_session_current_time',\n            args: {\"session_id\": sessionId, \"current_time\": currentTime},\n            fail: Notification.exception\n        }])[0];\n    };\n\n    /**\n     * Set video watch percentage for session.\n     *\n     * @param {int} sessionId\n     * @param {float} percent\n     * @returns {Promise}\n     */\n    VideoTime.prototype.setPercent = async function(sessionId, percent) {\n        if (this.instance.token) {\n            const url = new URL(Config.wwwroot + '/webservice/rest/server.php'),\n                data = url.searchParams;\n            data.set('wstoken', this.instance.token);\n            data.set('moodlewsrestformat', 'json');\n            data.set('wsfunction', 'videotimeplugin_pro_set_percent');\n            data.set('percent', percent);\n            data.set('session_id', sessionId);\n            const response = await fetch(url);\n            if (!response.ok) {\n                Notification.exeption('Web service error');\n            }\n            return await response.json();\n        }\n        return await Ajax.call([{\n            methodname: 'videotimeplugin_pro_set_percent',\n            args: {\"session_id\": sessionId, percent: percent},\n            fail: Notification.exception\n        }])[0];\n    };\n\n    /**\n     * Record watch time for session.\n     *\n     * @param {int} sessionId\n     * @param {float} time\n     * @returns {Promise}\n     */\n    VideoTime.prototype.recordWatchTime = async function(sessionId, time) {\n        if (this.instance.token) {\n            const url = new URL(Config.wwwroot + '/webservice/rest/server.php'),\n                data = url.searchParams;\n            data.set('wstoken', this.instance.token);\n            data.set('moodlewsrestformat', 'json');\n            data.set('wsfunction', 'videotimeplugin_pro_record_watch_time');\n            data.set('session_id', sessionId);\n            data.set('time', time);\n            const response = await fetch(url);\n            if (!response.ok) {\n                Notification.exeption('Web service error');\n            }\n            return await response.json();\n        }\n        return await Ajax.call([{\n            methodname: 'videotimeplugin_pro_record_watch_time',\n            args: {\"session_id\": sessionId, time: time},\n            fail: Notification.exception\n        }])[0];\n    };\n\n    /**\n     * Get data for next activity button.\n     *\n     * @param {int} sessionId\n     * @returns {Promise}\n     */\n    VideoTime.prototype.getNextActivityButtonData = async function(sessionId) {\n        if (this.instance.token) {\n            // We do not support button in iframe.\n            return {data: '{}'};\n        }\n        return await Ajax.call([{\n            methodname: 'videotimeplugin_pro_get_next_activity_button_data',\n            args: {\"session_id\": sessionId}\n        }])[0];\n    };\n\n    /**\n     * Get VideoTime instance for this course module.\n     *\n     * @returns {Promise}\n     */\n    VideoTime.prototype.getInstance = async function() {\n        if (this.instance) {\n            return this.instance;\n        }\n\n        return await Ajax.call([{\n            methodname: 'mod_videotime_get_videotime',\n            args: {cmid: this.cmId},\n            done: (response) => {\n                this.instance = response;\n                return this.instance;\n            },\n            fail: Notification.exception\n        }])[0];\n    };\n\n    /**\n     * Get time to resume video as seconds.\n     *\n     * @returns {Promise}\n     */\n    VideoTime.prototype.getResumeTime = async function() {\n        if (this.resumeTime) {\n            return this.resumeTime;\n        }\n\n        return await Ajax.call([{\n            methodname: 'videotimeplugin_pro_get_resume_time',\n            args: {cmid: this.cmId},\n            done: (response) => {\n                this.resumeTime = response.seconds;\n                return this.resumeTime;\n            },\n            fail: Notification.exception\n        }])[0];\n    };\n\n    /**\n     * Get new or existing video viewing session.\n     *\n     * @returns {Promise}\n     */\n    VideoTime.prototype.getSession = async function() {\n        if (this.instance.token) {\n            if (!this.session) {\n                const url = new URL(Config.wwwroot + '/webservice/rest/server.php'),\n                    data = url.searchParams;\n                data.set('wstoken', this.instance.token);\n                data.set('moodlewsrestformat', 'json');\n                data.set('wsfunction', 'videotimeplugin_pro_get_new_session');\n                data.set('cmid', this.cmId);\n                this.session = await fetch(url);\n                if (!this.session.ok) {\n                    Notification.exeption('Web service error');\n                }\n                return await this.session.json();\n            }\n\n            return await this.session;\n        }\n        if (!this.session) {\n            this.session = Ajax.call([{\n                methodname: 'videotimeplugin_pro_get_new_session',\n                args: {cmid: this.cmId},\n                fail: Notification.exception\n            }])[0];\n        }\n        return await this.session;\n    };\n\n    /**\n     * Parse start time and set player\n     *\n     * @param {string} starttime\n     * @returns {Promise}\n     */\n    VideoTime.prototype.setStartTime = async function(starttime) {\n        const time = starttime.match(/((([0-9]+):)?(([0-9]+):))?([0-9]+(\\.[0-9]+))/);\n        if (time) {\n            this.resumeTime = 3600 * Number(time[3] || 0) + 60 * Number(time[5] || 0) + Number(time[6]);\n            this.currentTime(this.resumeTime);\n        }\n        return await this.player.getCurrentTime();\n    };\n\n    /**\n     * Log the user view of video.\n     *\n     * @returns {Promise}\n     */\n    VideoTime.prototype.view = async function() {\n        if (this.instance.token) {\n            const url = new URL(Config.wwwroot + '/webservice/rest/server.php'),\n                data = url.searchParams;\n            data.set('wstoken', this.instance.token);\n            data.set('moodlewsrestformat', 'json');\n            data.set('wsfunction', 'mod_videotime_view_videotime');\n            data.set('cmid', this.cmId);\n            const response = await fetch(url);\n            if (!response.ok) {\n                Notification.exeption('Web service error');\n            }\n            return await response.json();\n        }\n        return await Ajax.call([{\n            methodname: 'mod_videotime_view_videotime',\n            args: {cmid: this.cmId},\n            fail: Notification.exception\n        }])[0];\n    };\n\n    /**\n     * Get play back rate\n     *\n     * @returns {Promise}\n     */\n    VideoTime.prototype.getPlaybackRate = async function() {\n        try {\n            const playbackRate = await this.player.getPlaybackRate();\n            return playbackRate;\n        } catch (e) {\n            Log.debug(e);\n            return 0;\n        }\n    };\n\n    /**\n     * Get duration of video\n     *\n     * @returns {Promise}\n     */\n    VideoTime.prototype.getDuration = async function() {\n        return await this.player.getDuration();\n    };\n\n    /**\n     * Set current time of player\n     *\n     * @param {float} secs time\n     * @returns {Promise}\n     */\n    VideoTime.prototype.setCurrentPosition = async function(secs) {\n        return await this.player.setCurrentTime(secs);\n    };\n\n    /**\n     * Get current time of player\n     *\n     * @returns {Promise}\n     */\n    VideoTime.prototype.getCurrentPosition = async function() {\n        let position = await this.player.getCurrentTime();\n        this.plugins.forEach(async plugin => {\n            if (plugin.getCurrentPosition) {\n                position = await plugin.getCurrentPosition(position);\n            }\n        });\n        return position;\n    };\n\n    return VideoTime;\n});\n"],"names":["define","$","Vimeo","Ajax","Config","Log","Templates","Notification","VideoTime","elementId","cmId","hasPro","interval","instance","player","resumeTime","session","played","playing","time","percent","currentTime","playbackRate","plugins","hasClass","addClass","modulecount","length","prototype","getCmId","this","registerPlugin","plugin","push","initialize","debug","autopause","Number","autoplay","background","byline","color","controls","dnt","height","loop","option_loop","maxheight","maxwidth","muted","portrait","pip","playsinline","responsive","speed","title","transparent","url","vimeo_url","width","handleStartTime","addListeners","i","async","URL","window","location","href","q","searchParams","get","starttime","match","setStartTime","find","getPaused","getPlayer","closest","each","tabs","index","anchor","getAttribute","addCuePoint","bind","on","event","data","removeClass","offsetTop","parentNode","scrollTo","top","left","behavior","startWatchInterval","view","resume_playback","resume_time","resume","getPlaybackRate","setTimeout","preventUpdate","seconds","duration","forEach","setCurrentTime","getSession","id","preventfastforwarding","watchTime","fastForwardBuffer","handleEnd","handlePause","getDuration","Math","floor","setCurrentPosition","setSessionState","setPercent","response","getNextActivityButtonData","JSON","parse","parseInt","next_activity_auto","is_restricted","hasnextcm","link","nextcm_url","first","click","html","render","watchInterval","setInterval","recordWatchTime","sessionId","state","token","wwwroot","set","fetch","ok","exeption","json","call","methodname","args","fail","exception","getInstance","cmid","done","getResumeTime","getCurrentTime","e","secs","getCurrentPosition","position"],"mappings":"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"}