{"version":3,"file":"videotime.min.js","sources":["../src/videotime.js"],"sourcesContent":["/*\n * @package    mod_videotime\n * @copyright  2021 bdecent gmbh <https://bdecent.de>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * @module mod_videotime/videotime\n */\ndefine([\n    'jquery',\n    'mod_videotime/player',\n    'core/ajax',\n    'core/log',\n    'core/templates',\n    'core/notification'\n], function(\n    $,\n    Vimeo,\n    Ajax,\n    Log,\n    Templates,\n    Notification\n) {\n\n    let VideoTime = function(elementId, cmId, hasPro, interval) {\n        this.elementId = elementId;\n        this.cmId = cmId;\n        this.hasPro = hasPro;\n        this.interval = interval;\n        this.player = null;\n        this.resumeTime = null;\n        this.session = null;\n        this.instance = null;\n\n        this.played = false;\n\n        this.playing = false;\n        this.time = 0;\n        this.percent = 0;\n        this.currentTime = 0;\n        this.playbackRate = 1;\n\n        this.plugins = [];\n\n        if (hasPro && $('body').hasClass('path-course-view') && !$('body').hasClass('vtinit')) {\n            $('body').addClass('vtinit');\n            $(document).on('focus', 'body', this.initializeNewInstances.bind(this));\n        }\n        this.modulecount = $('body .activity.videotime').length;\n    };\n\n    /**\n     * Get course module ID of this VideoTime instance.\n     *\n     * @return {int}\n     */\n    VideoTime.prototype.getCmId = function() {\n        return this.cmId;\n    };\n\n    /**\n     * Register a plugin to hook into VideoTime functionality.\n     *\n     * @param {VideoTimePlugin} plugin\n     */\n    VideoTime.prototype.registerPlugin = function(plugin) {\n        this.plugins.push(plugin);\n    };\n\n    VideoTime.prototype.initialize = function() {\n        Log.debug('Initializing Video Time ' + this.elementId);\n\n        this.getInstance().then((instance) => {\n            Log.debug('Initializing Vimeo player with options:');\n            Log.debug(instance);\n            this.player = new Vimeo(this.elementId, {\n                autopause: instance.autopause,\n                autoplay: instance.autoplay,\n                background: instance.background,\n                byline: instance.byline,\n                color: instance.color,\n                controls: instance.controls,\n                dnt: instance.dnt,\n                height: instance.height,\n                loop: instance.option_loop,\n                maxheight: instance.maxheight,\n                maxwidth: instance.maxwidth,\n                muted: instance.muted,\n                portrait: instance.portrait,\n                pip: instance.pip,\n                playsinline: instance.playsinline,\n                responsive: instance.responsive,\n                speed: instance.speed,\n                title: instance.title,\n                transparent: instance.transparent,\n                url: instance.vimeo_url,\n                width: instance.width\n            });\n\n            let url = new URL(window.location.href),\n                q = url.searchParams.get('q'),\n                starttime = (url.searchParams.get('time') || '').match(/^([0-9]+:){0,2}([0-9]+)(\\.[0-9]+)$/);\n            if (starttime) {\n                this.setStartTime(starttime[0]).then(function() {\n                    if (q && window.find) {\n                        window.find(q);\n                    }\n                    return true;\n                }).catch(Notification.exception);\n            } else if (q && window.find) {\n                window.find(q);\n            }\n\n            this.addListeners();\n\n            for (let i = 0; i < this.plugins.length; i++) {\n                const plugin = this.plugins[i];\n                plugin.initialize(this, instance);\n            }\n\n            return true;\n        }).catch(Notification.exeption);\n    };\n\n    /**\n     * Get Vimeo player object.\n     *\n     * @returns {Vimeo}\n     */\n    VideoTime.prototype.getPlayer = function() {\n        return this.player;\n    };\n\n    /**\n     * Register player events to respond to user interaction and play progress.\n     */\n    VideoTime.prototype.addListeners = function() {\n        if (!this.player) {\n            Log.debug('Player was not properly initialized for course module ' + this.cmId);\n            return;\n        }\n\n        // Fire view event in Moodle on first play only.\n        this.player.on('play', () => {\n            if (!this.played) {\n                if (this.hasPro) {\n                    // Getting a new session on first play.\n                    this.getSession().then(() => {\n                        this.view();\n                        this.startWatchInterval();\n                        return true;\n                    }).catch(Notification.exception);\n                } else {\n                    // Free version can still mark completion on video time view.\n                    this.view();\n                }\n            }\n            return true;\n        });\n\n        // Features beyond this point are for pro only.\n        if (!this.hasPro) {\n            return;\n        }\n\n        // If resume is present force seek the player to that point.\n        this.getResumeTime().then((seconds) => {\n            if (seconds <= 0) {\n                return true;\n            }\n\n            this.getDuration().then((duration) => {\n                let resumeTime = seconds;\n                // Duration is often a little greater than a resume time at the end of the video.\n                // A user may have watched 100 seconds when the video ends, but the duration may be\n                // 100.56 seconds. BUT, sometimes the duration is rounded depending on when the\n                // video loads, so it may be 101 seconds. Hence the +1 and Math.floor usage.\n                if (seconds + 1 >= Math.floor(duration)) {\n                    Log.debug('VIDEO_TIME video finished, resuming at start of video.');\n                    resumeTime = 0;\n                }\n\n                Log.debug('VIDEO_TIME resuming at ' + resumeTime);\n                this.setCurrentPosition(this.resumeTime);\n\n                return true;\n            }).catch(Notification.exception);\n\n            return true;\n        }).catch(Notification.exception);\n\n        // Note: Vimeo player does not support multiple events in a single on() call. Each requires it's own function.\n\n        // Catch all events where video plays.\n        this.player.on('play', function() {\n            this.playing = true;\n            Log.debug('VIDEO_TIME play');\n        }.bind(this));\n        this.player.on('playing', function() {\n            this.playing = true;\n            Log.debug('VIDEO_TIME playing');\n        }.bind(this));\n\n        // Catch all events where video stops.\n        this.player.on('pause', function() {\n            this.playing = false;\n            Log.debug('VIDEO_TIME pause');\n        }.bind(this));\n        this.player.on('stalled', function() {\n            this.playing = false;\n            Log.debug('VIDEO_TIME stalled');\n        }.bind(this));\n        this.player.on('suspend', function() {\n            this.playing = false;\n            Log.debug('VIDEO_TIME suspend');\n        }.bind(this));\n        this.player.on('abort', function() {\n            this.playing = false;\n            Log.debug('VIDEO_TIME abort');\n        }.bind(this));\n\n        this.player.getPlaybackRate().then(function(playbackRate) {\n            this.playbackRate = playbackRate;\n        }.bind(this)).catch(Notification.exception);\n\n        this.player.on('playbackratechange', function(event) {\n            this.playbackRate = event.playbackRate;\n        }.bind(this));\n\n        // Always update internal values for percent and current time watched.\n        this.player.on('timeupdate', function(event) {\n            this.percent = event.percent;\n            this.currentTime = event.seconds;\n            Log.debug('VIDEO_TIME timeupdate. Percent: ' + this.percent + '. Current time: ' + this.currentTime);\n        }.bind(this));\n\n        // Initiate video finish procedure.\n        this.player.on('ended', function() {\n            this.playing = false;\n            Log.debug('VIDEO_TIME ended');\n\n            new Promise(function(resolve) {\n                this.getSession().then(function(session) {\n                    resolve(session);\n                    return true;\n                }).catch(Notification.exception);\n            }.bind(this)).then(function(session) {\n                this.setSessionState(session.id, 1);\n                return session;\n            }.bind(this)).then(function(session) {\n                this.setPercent(session.id, 1);\n                return session;\n            }.bind(this)).then(function(session) {\n                this.setCurrentTime(session.id, this.currentTime);\n                return session;\n            }.bind(this)).catch(Notification.exception).finally(function() {\n                this.getSession().then(function(session) {\n                    this.getNextActivityButtonData(session.id).then(function(response) {\n                        let data = JSON.parse(response.data);\n\n                        if (data.instance && parseInt(data.instance.next_activity_auto)) {\n                            if (!data.is_restricted && data.hasnextcm) {\n                                let link = $('.aalink[href=\"' + data.nextcm_url + '\"] img').first();\n                                if ($('.path-course-view').length && link) {\n                                    link.click();\n                                } else {\n                                    window.location.href = data.nextcm_url;\n                                }\n                            }\n                        }\n\n                        Templates.render('videotime/next_activity_button', JSON.parse(response.data))\n                            .then(function(html) {\n                                $('#next-activity-button').html(html);\n                                return true;\n                            }).fail(Notification.exception);\n                        return true;\n                    }).fail(Notification.exception);\n                }.bind(this)).catch(Notification.exception);\n            }.bind(this)).fail(Notification.exception);\n        }.bind(this));\n\n        // If this is a tab play set time cues and listener.\n        $($('#' + this.elementId).closest('.videotimetabs')).each(function(i, tabs) {\n           $(tabs).find('[data-action=\"cue\"]').each(function(index, anchor) {\n                let starttime = anchor.getAttribute('data-start'),\n                    time = starttime.match(/((([0-9]+):)?(([0-9]+):))?([0-9]+(\\.[0-9]+))/);\n                if (time) {\n                    this.player.addCuePoint(\n                        3600 * Number(time[3] || 0) + 60 * Number(time[5] || 0) + Number(time[6]),\n                        {\n                            starttime: starttime\n                        }\n                    ).catch(Notification.exeception);\n                }\n            }.bind(this));\n\n            this.player.on('cuepoint', function(event) {\n                if (event.data.starttime) {\n                    $(tabs).find('.videotime-highlight').removeClass('videotime-highlight');\n                    $(tabs).find('[data-action=\"cue\"][data-start=\"' + event.data.starttime + '\"]')\n                        .closest('.row')\n                        .addClass('videotime-highlight');\n                    $('.videotime-highlight').each(function() {\n                        if (this.offsetTop) {\n                            this.parentNode.scrollTo({\n                                top: this.offsetTop - 50,\n                                left: 0,\n                                behavior: 'smooth'\n                            });\n                        }\n                    });\n                }\n            });\n        }.bind(this));\n    };\n\n    /**\n     * Start interval that will periodically record user progress via Ajax.\n     */\n    VideoTime.prototype.startWatchInterval = function() {\n        if (this.watchInterval) {\n            return;\n        }\n\n        this.watchInterval = setInterval(function() {\n            if (this.playing) {\n                this.time += this.playbackRate;\n\n                this.getSession().then(function(session) {\n                    if (this.time % this.interval === 0) {\n                        Log.debug('VIDEO_TIME watch_time: ' + this.time + '. percent: ' + this.percent);\n                        this.recordWatchTime(session.id, this.time);\n                        this.setPercent(session.id, this.percent);\n                        this.setCurrentTime(session.id, this.currentTime);\n                    }\n                    return true;\n                }.bind(this)).catch(Notification.exception);\n            }\n        }.bind(this), 1000);\n    };\n\n    /**\n     * Set state on session.\n     *\n     * @param {int} sessionId\n     * @param {int} state\n     * @returns {Promise}\n     */\n    VideoTime.prototype.setSessionState = function(sessionId, state) {\n        return Ajax.call([{\n            methodname: 'videotimeplugin_pro_set_session_state',\n            args: {\"session_id\": sessionId, state: state}\n        }])[0];\n    };\n\n    /**\n     * Set current watch time for video. Used for resuming.\n     *\n     * @param {int} sessionId\n     * @param {float} currentTime\n     * @returns {Promise}\n     */\n    VideoTime.prototype.setCurrentTime = function(sessionId, currentTime) {\n        return Ajax.call([{\n            methodname: 'videotimeplugin_pro_set_session_current_time',\n            args: {\"session_id\": sessionId, \"current_time\": currentTime}\n        }])[0];\n    };\n\n    /**\n     * Set video watch percentage for session.\n     *\n     * @param {int} sessionId\n     * @param {float} percent\n     * @returns {Promise}\n     */\n    VideoTime.prototype.setPercent = function(sessionId, percent) {\n        return Ajax.call([{\n            methodname: 'videotimeplugin_pro_set_percent',\n            args: {\"session_id\": sessionId, percent: percent}\n        }])[0];\n    };\n\n    /**\n     * Record watch time for session.\n     *\n     * @param {int} sessionId\n     * @param {float} time\n     * @returns {Promise}\n     */\n    VideoTime.prototype.recordWatchTime = function(sessionId, time) {\n        return Ajax.call([{\n            methodname: 'videotimeplugin_pro_record_watch_time',\n            args: {\"session_id\": sessionId, time: time}\n        }])[0];\n    };\n\n    /**\n     * Get data for next activity button.\n     *\n     * @param {int} sessionId\n     * @returns {Promise}\n     */\n    VideoTime.prototype.getNextActivityButtonData = function(sessionId) {\n        return Ajax.call([{\n            methodname: 'videotimeplugin_pro_get_next_activity_button_data',\n            args: {\"session_id\": sessionId}\n        }])[0];\n    };\n\n    /**\n     * Get VideoTime instance for this course module.\n     *\n     * @returns {Promise}\n     */\n    VideoTime.prototype.getInstance = function() {\n        if (this.instance) {\n            return Promise.resolve(this.instance);\n        }\n\n        return new Promise((resolve) => {\n            Ajax.call([{\n                methodname: 'mod_videotime_get_videotime',\n                args: {cmid: this.cmId}\n            }])[0].then((response) => {\n                this.instance = response;\n                resolve(this.instance);\n                return true;\n            }).fail(Notification.exception);\n        });\n    };\n\n    /**\n     * Get time to resume video as seconds.\n     *\n     * @returns {Promise}\n     */\n    VideoTime.prototype.getResumeTime = function() {\n        if (this.resumeTime) {\n            return Promise.resolve(this.resumeTime);\n        }\n\n        return new Promise((resolve) => {\n            Ajax.call([{\n                methodname: 'videotimeplugin_pro_get_resume_time',\n                args: {cmid: this.cmId}\n            }])[0].then((response) => {\n                this.resumeTime = response.seconds;\n                resolve(this.resumeTime);\n                return true;\n            }).fail(Notification.exception);\n        });\n    };\n\n    /**\n     * Get new or existing video viewing session.\n     *\n     * @returns {Promise}\n     */\n    VideoTime.prototype.getSession = function() {\n        if (this.session) {\n            return Promise.resolve(this.session);\n        }\n\n        return new Promise((resolve) => {\n            Ajax.call([{\n                methodname: 'videotimeplugin_pro_get_new_session',\n                args: {cmid: this.cmId}\n            }])[0].then(function(response) {\n                this.session = response;\n                resolve(response);\n                return true;\n            }.bind(this)).fail(Notification.exception);\n        });\n    };\n\n    /**\n     * Parse start time and set player\n     *\n     * @param {string} starttime\n     * @returns {Promise}\n     */\n    VideoTime.prototype.setStartTime = function(starttime) {\n        let time = starttime.match(/((([0-9]+):)?(([0-9]+):))?([0-9]+(\\.[0-9]+))/);\n        if (time) {\n            this.resumeTime = 3600 * Number(time[3] || 0) + 60 * Number(time[5] || 0) + Number(time[6]);\n            this.currentTime(this.resumeTime);\n        }\n        return this.player.getCurrentTime();\n    };\n\n    /**\n     * Log the user view of video.\n     *\n     * @returns {Promise}\n     */\n    VideoTime.prototype.view = function() {\n        return Ajax.call([{\n            methodname: 'mod_videotime_view_videotime',\n            args: {cmid: this.cmId}\n        }])[0];\n    };\n\n    /**\n     * Initialize new labels and preview when editing\n     */\n    VideoTime.prototype.initializeNewInstances = function() {\n        if (this.modulecount == $('body .activity.videotime').length) {\n            return;\n        }\n        this.modulecount = $('body .activity.videotime').length;\n        $('body .activity.videotime').each(function(index, module) {\n            if (\n                !$(module).find('.instancename').length\n                && $(module).find('.vimeo-embed').length\n                && !$(module).find('.vimeo-embed iframe').length\n            ) {\n                let instance = {\n                    cmid: Number($(module).attr('id').replace('module-', '')),\n                    haspro: true,\n                    interval: this.interval,\n                    uniqueid: $(module).find('.vimeo-embed').first().attr('id').replace('vimeo-embed-', '')\n                };\n                Templates.render('mod_videotime/videotime_instance', {\n                    instance: instance\n                }).then(function(html, js) {\n                    Templates.runTemplateJS(js);\n                    return true;\n                }).fail(Notification.exception);\n            }\n        }.bind(this));\n    };\n\n    /**\n     * Get play back rate\n     *\n     * @returns {Promise}\n     */\n    VideoTime.prototype.getPlaybackRate = function() {\n        return this.player.getPlaybackRate();\n    };\n\n    /**\n     * Get duration of video\n     *\n     * @returns {Promise}\n     */\n    VideoTime.prototype.getDuration = function() {\n        return this.player.getDuration();\n    };\n\n    /**\n     * Set current time of player\n     *\n     * @param {float} secs time\n     * @returns {Promise}\n     */\n    VideoTime.prototype.setCurrentPosition = function(secs) {\n        return this.player.setCurrentTime(secs);\n    };\n\n    /**\n     * Get current time of player\n     *\n     * @returns {Promise}\n     */\n    VideoTime.prototype.getCurrentPosition = function() {\n        return this.player.getCurrentTime();\n    };\n\n    return VideoTime;\n});\n"],"names":["define","$","Vimeo","Ajax","Log","Templates","Notification","VideoTime","elementId","cmId","hasPro","interval","player","resumeTime","session","instance","played","playing","time","percent","currentTime","playbackRate","plugins","hasClass","addClass","document","on","this","initializeNewInstances","bind","modulecount","length","prototype","getCmId","registerPlugin","plugin","push","initialize","debug","getInstance","then","autopause","autoplay","background","byline","color","controls","dnt","height","loop","option_loop","maxheight","maxwidth","muted","portrait","pip","playsinline","responsive","speed","title","transparent","url","vimeo_url","width","URL","window","location","href","q","searchParams","get","starttime","match","setStartTime","find","catch","exception","addListeners","i","exeption","getPlayer","getSession","view","startWatchInterval","getResumeTime","seconds","getDuration","duration","Math","floor","setCurrentPosition","getPlaybackRate","event","Promise","resolve","setSessionState","id","setPercent","setCurrentTime","finally","getNextActivityButtonData","response","data","JSON","parse","parseInt","next_activity_auto","is_restricted","hasnextcm","link","nextcm_url","first","click","render","html","fail","closest","each","tabs","index","anchor","getAttribute","addCuePoint","Number","exeception","removeClass","offsetTop","parentNode","scrollTo","top","left","behavior","watchInterval","setInterval","recordWatchTime","sessionId","state","call","methodname","args","cmid","getCurrentTime","module","attr","replace","haspro","uniqueid","js","runTemplateJS","secs","getCurrentPosition"],"mappings":";;;;;AASAA,iCAAO,CACH,SACA,uBACA,YACA,WACA,iBACA,sBACD,SACCC,EACAC,MACAC,KACAC,IACAC,UACAC,kBAGIC,UAAY,SAASC,UAAWC,KAAMC,OAAQC,eACzCH,UAAYA,eACZC,KAAOA,UACPC,OAASA,YACTC,SAAWA,cACXC,OAAS,UACTC,WAAa,UACbC,QAAU,UACVC,SAAW,UAEXC,QAAS,OAETC,SAAU,OACVC,KAAO,OACPC,QAAU,OACVC,YAAc,OACdC,aAAe,OAEfC,QAAU,GAEXZ,QAAUT,EAAE,QAAQsB,SAAS,sBAAwBtB,EAAE,QAAQsB,SAAS,YACxEtB,EAAE,QAAQuB,SAAS,UACnBvB,EAAEwB,UAAUC,GAAG,QAAS,OAAQC,KAAKC,uBAAuBC,KAAKF,aAEhEG,YAAc7B,EAAE,4BAA4B8B,eAQrDxB,UAAUyB,UAAUC,QAAU,kBACnBN,KAAKlB,MAQhBF,UAAUyB,UAAUE,eAAiB,SAASC,aACrCb,QAAQc,KAAKD,SAGtB5B,UAAUyB,UAAUK,WAAa,WAC7BjC,IAAIkC,MAAM,2BAA6BX,KAAKnB,gBAEvC+B,cAAcC,MAAMzB,WACrBX,IAAIkC,MAAM,2CACVlC,IAAIkC,MAAMvB,eACLH,OAAS,IAAIV,MAAMyB,KAAKnB,UAAW,CACpCiC,UAAW1B,SAAS0B,UACpBC,SAAU3B,SAAS2B,SACnBC,WAAY5B,SAAS4B,WACrBC,OAAQ7B,SAAS6B,OACjBC,MAAO9B,SAAS8B,MAChBC,SAAU/B,SAAS+B,SACnBC,IAAKhC,SAASgC,IACdC,OAAQjC,SAASiC,OACjBC,KAAMlC,SAASmC,YACfC,UAAWpC,SAASoC,UACpBC,SAAUrC,SAASqC,SACnBC,MAAOtC,SAASsC,MAChBC,SAAUvC,SAASuC,SACnBC,IAAKxC,SAASwC,IACdC,YAAazC,SAASyC,YACtBC,WAAY1C,SAAS0C,WACrBC,MAAO3C,SAAS2C,MAChBC,MAAO5C,SAAS4C,MAChBC,YAAa7C,SAAS6C,YACtBC,IAAK9C,SAAS+C,UACdC,MAAOhD,SAASgD,YAGhBF,IAAM,IAAIG,IAAIC,OAAOC,SAASC,MAC9BC,EAAIP,IAAIQ,aAAaC,IAAI,KACzBC,WAAaV,IAAIQ,aAAaC,IAAI,SAAW,IAAIE,MAAM,sCACvDD,eACKE,aAAaF,UAAU,IAAI/B,MAAK,kBAC7B4B,GAAKH,OAAOS,MACZT,OAAOS,KAAKN,IAET,KACRO,MAAMrE,aAAasE,WACfR,GAAKH,OAAOS,MACnBT,OAAOS,KAAKN,QAGXS,mBAEA,IAAIC,EAAI,EAAGA,EAAInD,KAAKL,QAAQS,OAAQ+C,IAAK,CAC3BnD,KAAKL,QAAQwD,GACrBzC,WAAWV,KAAMZ,iBAGrB,KACR4D,MAAMrE,aAAayE,WAQ1BxE,UAAUyB,UAAUgD,UAAY,kBACrBrD,KAAKf,QAMhBL,UAAUyB,UAAU6C,aAAe,WAC1BlD,KAAKf,aAMLA,OAAOc,GAAG,QAAQ,KACdC,KAAKX,SACFW,KAAKjB,YAEAuE,aAAazC,MAAK,UACd0C,YACAC,sBACE,KACRR,MAAMrE,aAAasE,gBAGjBM,SAGN,KAINvD,KAAKjB,cAKL0E,gBAAgB5C,MAAM6C,UACnBA,SAAW,QAIVC,cAAc9C,MAAM+C,eACjB1E,WAAawE,eAKbA,QAAU,GAAKG,KAAKC,MAAMF,YAC1BnF,IAAIkC,MAAM,0DACVzB,WAAa,GAGjBT,IAAIkC,MAAM,0BAA4BzB,iBACjC6E,mBAAmB/D,KAAKd,aAEtB,KACR8D,MAAMrE,aAAasE,YAlBX,KAqBZD,MAAMrE,aAAasE,gBAKjBhE,OAAOc,GAAG,OAAQ,gBACdT,SAAU,EACfb,IAAIkC,MAAM,oBACZT,KAAKF,YACFf,OAAOc,GAAG,UAAW,gBACjBT,SAAU,EACfb,IAAIkC,MAAM,uBACZT,KAAKF,YAGFf,OAAOc,GAAG,QAAS,gBACfT,SAAU,EACfb,IAAIkC,MAAM,qBACZT,KAAKF,YACFf,OAAOc,GAAG,UAAW,gBACjBT,SAAU,EACfb,IAAIkC,MAAM,uBACZT,KAAKF,YACFf,OAAOc,GAAG,UAAW,gBACjBT,SAAU,EACfb,IAAIkC,MAAM,uBACZT,KAAKF,YACFf,OAAOc,GAAG,QAAS,gBACfT,SAAU,EACfb,IAAIkC,MAAM,qBACZT,KAAKF,YAEFf,OAAO+E,kBAAkBnD,KAAK,SAASnB,mBACnCA,aAAeA,cACtBQ,KAAKF,OAAOgD,MAAMrE,aAAasE,gBAE5BhE,OAAOc,GAAG,qBAAsB,SAASkE,YACrCvE,aAAeuE,MAAMvE,cAC5BQ,KAAKF,YAGFf,OAAOc,GAAG,aAAc,SAASkE,YAC7BzE,QAAUyE,MAAMzE,aAChBC,YAAcwE,MAAMP,QACzBjF,IAAIkC,MAAM,mCAAqCX,KAAKR,QAAU,mBAAqBQ,KAAKP,cAC1FS,KAAKF,YAGFf,OAAOc,GAAG,QAAS,gBACfT,SAAU,EACfb,IAAIkC,MAAM,wBAENuD,QAAQ,SAASC,cACZb,aAAazC,MAAK,SAAS1B,gBAC5BgF,QAAQhF,UACD,KACR6D,MAAMrE,aAAasE,YACxB/C,KAAKF,OAAOa,KAAK,SAAS1B,qBACnBiF,gBAAgBjF,QAAQkF,GAAI,GAC1BlF,SACTe,KAAKF,OAAOa,KAAK,SAAS1B,qBACnBmF,WAAWnF,QAAQkF,GAAI,GACrBlF,SACTe,KAAKF,OAAOa,KAAK,SAAS1B,qBACnBoF,eAAepF,QAAQkF,GAAIrE,KAAKP,aAC9BN,SACTe,KAAKF,OAAOgD,MAAMrE,aAAasE,WAAWuB,QAAQ,gBAC3ClB,aAAazC,KAAK,SAAS1B,cACvBsF,0BAA0BtF,QAAQkF,IAAIxD,MAAK,SAAS6D,cACjDC,KAAOC,KAAKC,MAAMH,SAASC,SAE3BA,KAAKvF,UAAY0F,SAASH,KAAKvF,SAAS2F,sBACnCJ,KAAKK,eAAiBL,KAAKM,UAAW,KACnCC,KAAO5G,EAAE,iBAAmBqG,KAAKQ,WAAa,UAAUC,QACxD9G,EAAE,qBAAqB8B,QAAU8E,KACjCA,KAAKG,QAEL/C,OAAOC,SAASC,KAAOmC,KAAKQ,kBAKxCzG,UAAU4G,OAAO,iCAAkCV,KAAKC,MAAMH,SAASC,OAClE9D,MAAK,SAAS0E,aACXjH,EAAE,yBAAyBiH,KAAKA,OACzB,KACRC,KAAK7G,aAAasE,YAClB,KACRuC,KAAK7G,aAAasE,YACvB/C,KAAKF,OAAOgD,MAAMrE,aAAasE,YACnC/C,KAAKF,OAAOwF,KAAK7G,aAAasE,YAClC/C,KAAKF,OAGP1B,EAAEA,EAAE,IAAM0B,KAAKnB,WAAW4G,QAAQ,mBAAmBC,KAAK,SAASvC,EAAGwC,MACnErH,EAAEqH,MAAM5C,KAAK,uBAAuB2C,KAAK,SAASE,MAAOC,YAChDjD,UAAYiD,OAAOC,aAAa,cAChCvG,KAAOqD,UAAUC,MAAM,gDACvBtD,WACKN,OAAO8G,YACR,KAAOC,OAAOzG,KAAK,IAAM,GAAK,GAAKyG,OAAOzG,KAAK,IAAM,GAAKyG,OAAOzG,KAAK,IACtE,CACIqD,UAAWA,YAEjBI,MAAMrE,aAAasH,aAE3B/F,KAAKF,YAEFf,OAAOc,GAAG,YAAY,SAASkE,OAC5BA,MAAMU,KAAK/B,YACXtE,EAAEqH,MAAM5C,KAAK,wBAAwBmD,YAAY,uBACjD5H,EAAEqH,MAAM5C,KAAK,mCAAqCkB,MAAMU,KAAK/B,UAAY,MACpE6C,QAAQ,QACR5F,SAAS,uBACdvB,EAAE,wBAAwBoH,MAAK,WACvB1F,KAAKmG,gBACAC,WAAWC,SAAS,CACrBC,IAAKtG,KAAKmG,UAAY,GACtBI,KAAM,EACNC,SAAU,mBAMhCtG,KAAKF,SAhLHvB,IAAIkC,MAAM,yDAA2DX,KAAKlB,OAsLlFF,UAAUyB,UAAUmD,mBAAqB,WACjCxD,KAAKyG,qBAIJA,cAAgBC,YAAY,WACzB1G,KAAKV,eACAC,MAAQS,KAAKN,kBAEb4D,aAAazC,KAAK,SAAS1B,gBACxBa,KAAKT,KAAOS,KAAKhB,UAAa,IAC9BP,IAAIkC,MAAM,0BAA4BX,KAAKT,KAAO,cAAgBS,KAAKR,cAClEmH,gBAAgBxH,QAAQkF,GAAIrE,KAAKT,WACjC+E,WAAWnF,QAAQkF,GAAIrE,KAAKR,cAC5B+E,eAAepF,QAAQkF,GAAIrE,KAAKP,eAElC,GACTS,KAAKF,OAAOgD,MAAMrE,aAAasE,aAEvC/C,KAAKF,MAAO,OAUlBpB,UAAUyB,UAAU+D,gBAAkB,SAASwC,UAAWC,cAC/CrI,KAAKsI,KAAK,CAAC,CACdC,WAAY,wCACZC,KAAM,YAAeJ,UAAWC,MAAOA,UACvC,IAURjI,UAAUyB,UAAUkE,eAAiB,SAASqC,UAAWnH,oBAC9CjB,KAAKsI,KAAK,CAAC,CACdC,WAAY,+CACZC,KAAM,YAAeJ,uBAA2BnH,gBAChD,IAURb,UAAUyB,UAAUiE,WAAa,SAASsC,UAAWpH,gBAC1ChB,KAAKsI,KAAK,CAAC,CACdC,WAAY,kCACZC,KAAM,YAAeJ,UAAWpH,QAASA,YACzC,IAURZ,UAAUyB,UAAUsG,gBAAkB,SAASC,UAAWrH,aAC/Cf,KAAKsI,KAAK,CAAC,CACdC,WAAY,wCACZC,KAAM,YAAeJ,UAAWrH,KAAMA,SACtC,IASRX,UAAUyB,UAAUoE,0BAA4B,SAASmC,kBAC9CpI,KAAKsI,KAAK,CAAC,CACdC,WAAY,oDACZC,KAAM,YAAeJ,cACrB,IAQRhI,UAAUyB,UAAUO,YAAc,kBAC1BZ,KAAKZ,SACE8E,QAAQC,QAAQnE,KAAKZ,UAGzB,IAAI8E,SAASC,UAChB3F,KAAKsI,KAAK,CAAC,CACPC,WAAY,8BACZC,KAAM,CAACC,KAAMjH,KAAKlB,SAClB,GAAG+B,MAAM6D,gBACJtF,SAAWsF,SAChBP,QAAQnE,KAAKZ,WACN,KACRoG,KAAK7G,aAAasE,eAS7BrE,UAAUyB,UAAUoD,cAAgB,kBAC5BzD,KAAKd,WACEgF,QAAQC,QAAQnE,KAAKd,YAGzB,IAAIgF,SAASC,UAChB3F,KAAKsI,KAAK,CAAC,CACPC,WAAY,sCACZC,KAAM,CAACC,KAAMjH,KAAKlB,SAClB,GAAG+B,MAAM6D,gBACJxF,WAAawF,SAAShB,QAC3BS,QAAQnE,KAAKd,aACN,KACRsG,KAAK7G,aAAasE,eAS7BrE,UAAUyB,UAAUiD,WAAa,kBACzBtD,KAAKb,QACE+E,QAAQC,QAAQnE,KAAKb,SAGzB,IAAI+E,SAASC,UAChB3F,KAAKsI,KAAK,CAAC,CACPC,WAAY,sCACZC,KAAM,CAACC,KAAMjH,KAAKlB,SAClB,GAAG+B,KAAK,SAAS6D,sBACZvF,QAAUuF,SACfP,QAAQO,WACD,GACTxE,KAAKF,OAAOwF,KAAK7G,aAAasE,eAUxCrE,UAAUyB,UAAUyC,aAAe,SAASF,eACpCrD,KAAOqD,UAAUC,MAAM,uDACvBtD,YACKL,WAAa,KAAO8G,OAAOzG,KAAK,IAAM,GAAK,GAAKyG,OAAOzG,KAAK,IAAM,GAAKyG,OAAOzG,KAAK,SACnFE,YAAYO,KAAKd,aAEnBc,KAAKf,OAAOiI,kBAQvBtI,UAAUyB,UAAUkD,KAAO,kBAChB/E,KAAKsI,KAAK,CAAC,CACdC,WAAY,+BACZC,KAAM,CAACC,KAAMjH,KAAKlB,SAClB,IAMRF,UAAUyB,UAAUJ,uBAAyB,WACrCD,KAAKG,aAAe7B,EAAE,4BAA4B8B,cAGjDD,YAAc7B,EAAE,4BAA4B8B,OACjD9B,EAAE,4BAA4BoH,KAAK,SAASE,MAAOuB,YAE1C7I,EAAE6I,QAAQpE,KAAK,iBAAiB3C,QAC9B9B,EAAE6I,QAAQpE,KAAK,gBAAgB3C,SAC9B9B,EAAE6I,QAAQpE,KAAK,uBAAuB3C,OAC5C,KACMhB,SAAW,CACX6H,KAAMjB,OAAO1H,EAAE6I,QAAQC,KAAK,MAAMC,QAAQ,UAAW,KACrDC,QAAQ,EACRtI,SAAUgB,KAAKhB,SACfuI,SAAUjJ,EAAE6I,QAAQpE,KAAK,gBAAgBqC,QAAQgC,KAAK,MAAMC,QAAQ,eAAgB,KAExF3I,UAAU4G,OAAO,mCAAoC,CACjDlG,SAAUA,WACXyB,MAAK,SAAS0E,KAAMiC,WACnB9I,UAAU+I,cAAcD,KACjB,KACRhC,KAAK7G,aAAasE,aAE3B/C,KAAKF,SAQXpB,UAAUyB,UAAU2D,gBAAkB,kBAC3BhE,KAAKf,OAAO+E,mBAQvBpF,UAAUyB,UAAUsD,YAAc,kBACvB3D,KAAKf,OAAO0E,eASvB/E,UAAUyB,UAAU0D,mBAAqB,SAAS2D,aACvC1H,KAAKf,OAAOsF,eAAemD,OAQtC9I,UAAUyB,UAAUsH,mBAAqB,kBAC9B3H,KAAKf,OAAOiI,kBAGhBtI"}